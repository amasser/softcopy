// Code generated by protoc-gen-go. DO NOT EDIT.
// source: softcopy.proto

package scproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type File struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hash                 string               `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Filename             string               `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	DocumentDate         *timestamp.Timestamp `protobuf:"bytes,4,opt,name=document_date,json=documentDate,proto3" json:"document_date,omitempty"`
	Size                 int64                `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_softcopy_e007884a9e150063, []int{0}
}
func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (dst *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(dst, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *File) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *File) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *File) GetDocumentDate() *timestamp.Timestamp {
	if m != nil {
		return m.DocumentDate
	}
	return nil
}

func (m *File) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type TaggedFile struct {
	File                 *File    `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Tags                 []*Tag   `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaggedFile) Reset()         { *m = TaggedFile{} }
func (m *TaggedFile) String() string { return proto.CompactTextString(m) }
func (*TaggedFile) ProtoMessage()    {}
func (*TaggedFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_softcopy_e007884a9e150063, []int{1}
}
func (m *TaggedFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaggedFile.Unmarshal(m, b)
}
func (m *TaggedFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaggedFile.Marshal(b, m, deterministic)
}
func (dst *TaggedFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaggedFile.Merge(dst, src)
}
func (m *TaggedFile) XXX_Size() int {
	return xxx_messageInfo_TaggedFile.Size(m)
}
func (m *TaggedFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TaggedFile.DiscardUnknown(m)
}

var xxx_messageInfo_TaggedFile proto.InternalMessageInfo

func (m *TaggedFile) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TaggedFile) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Tag struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Category             string   `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	System               bool     `protobuf:"varint,4,opt,name=system,proto3" json:"system,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_softcopy_e007884a9e150063, []int{2}
}
func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (dst *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(dst, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Tag) GetSystem() bool {
	if m != nil {
		return m.System
	}
	return false
}

type GetFileRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFileRequest) Reset()         { *m = GetFileRequest{} }
func (m *GetFileRequest) String() string { return proto.CompactTextString(m) }
func (*GetFileRequest) ProtoMessage()    {}
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_softcopy_e007884a9e150063, []int{3}
}
func (m *GetFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileRequest.Unmarshal(m, b)
}
func (m *GetFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileRequest.Marshal(b, m, deterministic)
}
func (dst *GetFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileRequest.Merge(dst, src)
}
func (m *GetFileRequest) XXX_Size() int {
	return xxx_messageInfo_GetFileRequest.Size(m)
}
func (m *GetFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileRequest proto.InternalMessageInfo

func (m *GetFileRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetFileResponse struct {
	File                 *TaggedFile `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetFileResponse) Reset()         { *m = GetFileResponse{} }
func (m *GetFileResponse) String() string { return proto.CompactTextString(m) }
func (*GetFileResponse) ProtoMessage()    {}
func (*GetFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_softcopy_e007884a9e150063, []int{4}
}
func (m *GetFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileResponse.Unmarshal(m, b)
}
func (m *GetFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileResponse.Marshal(b, m, deterministic)
}
func (dst *GetFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileResponse.Merge(dst, src)
}
func (m *GetFileResponse) XXX_Size() int {
	return xxx_messageInfo_GetFileResponse.Size(m)
}
func (m *GetFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileResponse proto.InternalMessageInfo

func (m *GetFileResponse) GetFile() *TaggedFile {
	if m != nil {
		return m.File
	}
	return nil
}

type FindFilesWithTagsRequest struct {
	TagNames             []string `protobuf:"bytes,1,rep,name=tag_names,json=tagNames,proto3" json:"tag_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindFilesWithTagsRequest) Reset()         { *m = FindFilesWithTagsRequest{} }
func (m *FindFilesWithTagsRequest) String() string { return proto.CompactTextString(m) }
func (*FindFilesWithTagsRequest) ProtoMessage()    {}
func (*FindFilesWithTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_softcopy_e007884a9e150063, []int{5}
}
func (m *FindFilesWithTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindFilesWithTagsRequest.Unmarshal(m, b)
}
func (m *FindFilesWithTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindFilesWithTagsRequest.Marshal(b, m, deterministic)
}
func (dst *FindFilesWithTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindFilesWithTagsRequest.Merge(dst, src)
}
func (m *FindFilesWithTagsRequest) XXX_Size() int {
	return xxx_messageInfo_FindFilesWithTagsRequest.Size(m)
}
func (m *FindFilesWithTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindFilesWithTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindFilesWithTagsRequest proto.InternalMessageInfo

func (m *FindFilesWithTagsRequest) GetTagNames() []string {
	if m != nil {
		return m.TagNames
	}
	return nil
}

type FindFilesWithTagsResponse struct {
	Files                []*File  `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindFilesWithTagsResponse) Reset()         { *m = FindFilesWithTagsResponse{} }
func (m *FindFilesWithTagsResponse) String() string { return proto.CompactTextString(m) }
func (*FindFilesWithTagsResponse) ProtoMessage()    {}
func (*FindFilesWithTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_softcopy_e007884a9e150063, []int{6}
}
func (m *FindFilesWithTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindFilesWithTagsResponse.Unmarshal(m, b)
}
func (m *FindFilesWithTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindFilesWithTagsResponse.Marshal(b, m, deterministic)
}
func (dst *FindFilesWithTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindFilesWithTagsResponse.Merge(dst, src)
}
func (m *FindFilesWithTagsResponse) XXX_Size() int {
	return xxx_messageInfo_FindFilesWithTagsResponse.Size(m)
}
func (m *FindFilesWithTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindFilesWithTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindFilesWithTagsResponse proto.InternalMessageInfo

func (m *FindFilesWithTagsResponse) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

type FindFilesWithIdPrefixRequest struct {
	IdPrefix             string   `protobuf:"bytes,1,opt,name=id_prefix,json=idPrefix,proto3" json:"id_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindFilesWithIdPrefixRequest) Reset()         { *m = FindFilesWithIdPrefixRequest{} }
func (m *FindFilesWithIdPrefixRequest) String() string { return proto.CompactTextString(m) }
func (*FindFilesWithIdPrefixRequest) ProtoMessage()    {}
func (*FindFilesWithIdPrefixRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_softcopy_e007884a9e150063, []int{7}
}
func (m *FindFilesWithIdPrefixRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindFilesWithIdPrefixRequest.Unmarshal(m, b)
}
func (m *FindFilesWithIdPrefixRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindFilesWithIdPrefixRequest.Marshal(b, m, deterministic)
}
func (dst *FindFilesWithIdPrefixRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindFilesWithIdPrefixRequest.Merge(dst, src)
}
func (m *FindFilesWithIdPrefixRequest) XXX_Size() int {
	return xxx_messageInfo_FindFilesWithIdPrefixRequest.Size(m)
}
func (m *FindFilesWithIdPrefixRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindFilesWithIdPrefixRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindFilesWithIdPrefixRequest proto.InternalMessageInfo

func (m *FindFilesWithIdPrefixRequest) GetIdPrefix() string {
	if m != nil {
		return m.IdPrefix
	}
	return ""
}

type FindFilesWithIdPrefixResponse struct {
	Files                []*File  `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindFilesWithIdPrefixResponse) Reset()         { *m = FindFilesWithIdPrefixResponse{} }
func (m *FindFilesWithIdPrefixResponse) String() string { return proto.CompactTextString(m) }
func (*FindFilesWithIdPrefixResponse) ProtoMessage()    {}
func (*FindFilesWithIdPrefixResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_softcopy_e007884a9e150063, []int{8}
}
func (m *FindFilesWithIdPrefixResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindFilesWithIdPrefixResponse.Unmarshal(m, b)
}
func (m *FindFilesWithIdPrefixResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindFilesWithIdPrefixResponse.Marshal(b, m, deterministic)
}
func (dst *FindFilesWithIdPrefixResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindFilesWithIdPrefixResponse.Merge(dst, src)
}
func (m *FindFilesWithIdPrefixResponse) XXX_Size() int {
	return xxx_messageInfo_FindFilesWithIdPrefixResponse.Size(m)
}
func (m *FindFilesWithIdPrefixResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindFilesWithIdPrefixResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindFilesWithIdPrefixResponse proto.InternalMessageInfo

func (m *FindFilesWithIdPrefixResponse) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

type AllFileRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllFileRequest) Reset()         { *m = AllFileRequest{} }
func (m *AllFileRequest) String() string { return proto.CompactTextString(m) }
func (*AllFileRequest) ProtoMessage()    {}
func (*AllFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_softcopy_e007884a9e150063, []int{9}
}
func (m *AllFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllFileRequest.Unmarshal(m, b)
}
func (m *AllFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllFileRequest.Marshal(b, m, deterministic)
}
func (dst *AllFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllFileRequest.Merge(dst, src)
}
func (m *AllFileRequest) XXX_Size() int {
	return xxx_messageInfo_AllFileRequest.Size(m)
}
func (m *AllFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllFileRequest proto.InternalMessageInfo

type DownloadFileRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadFileRequest) Reset()         { *m = DownloadFileRequest{} }
func (m *DownloadFileRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadFileRequest) ProtoMessage()    {}
func (*DownloadFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_softcopy_e007884a9e150063, []int{10}
}
func (m *DownloadFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadFileRequest.Unmarshal(m, b)
}
func (m *DownloadFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadFileRequest.Marshal(b, m, deterministic)
}
func (dst *DownloadFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadFileRequest.Merge(dst, src)
}
func (m *DownloadFileRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadFileRequest.Size(m)
}
func (m *DownloadFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadFileRequest proto.InternalMessageInfo

func (m *DownloadFileRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DownloadFileResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadFileResponse) Reset()         { *m = DownloadFileResponse{} }
func (m *DownloadFileResponse) String() string { return proto.CompactTextString(m) }
func (*DownloadFileResponse) ProtoMessage()    {}
func (*DownloadFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_softcopy_e007884a9e150063, []int{11}
}
func (m *DownloadFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadFileResponse.Unmarshal(m, b)
}
func (m *DownloadFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadFileResponse.Marshal(b, m, deterministic)
}
func (dst *DownloadFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadFileResponse.Merge(dst, src)
}
func (m *DownloadFileResponse) XXX_Size() int {
	return xxx_messageInfo_DownloadFileResponse.Size(m)
}
func (m *DownloadFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadFileResponse proto.InternalMessageInfo

func (m *DownloadFileResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*File)(nil), "scproto.File")
	proto.RegisterType((*TaggedFile)(nil), "scproto.TaggedFile")
	proto.RegisterType((*Tag)(nil), "scproto.Tag")
	proto.RegisterType((*GetFileRequest)(nil), "scproto.GetFileRequest")
	proto.RegisterType((*GetFileResponse)(nil), "scproto.GetFileResponse")
	proto.RegisterType((*FindFilesWithTagsRequest)(nil), "scproto.FindFilesWithTagsRequest")
	proto.RegisterType((*FindFilesWithTagsResponse)(nil), "scproto.FindFilesWithTagsResponse")
	proto.RegisterType((*FindFilesWithIdPrefixRequest)(nil), "scproto.FindFilesWithIdPrefixRequest")
	proto.RegisterType((*FindFilesWithIdPrefixResponse)(nil), "scproto.FindFilesWithIdPrefixResponse")
	proto.RegisterType((*AllFileRequest)(nil), "scproto.AllFileRequest")
	proto.RegisterType((*DownloadFileRequest)(nil), "scproto.DownloadFileRequest")
	proto.RegisterType((*DownloadFileResponse)(nil), "scproto.DownloadFileResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SoftcopyClient is the client API for Softcopy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SoftcopyClient interface {
	GetFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (*GetFileResponse, error)
	FindFilesWithIdPrefix(ctx context.Context, in *FindFilesWithIdPrefixRequest, opts ...grpc.CallOption) (*FindFilesWithIdPrefixResponse, error)
	FindFilesWithTags(ctx context.Context, in *FindFilesWithTagsRequest, opts ...grpc.CallOption) (*FindFilesWithTagsResponse, error)
}

type softcopyClient struct {
	cc *grpc.ClientConn
}

func NewSoftcopyClient(cc *grpc.ClientConn) SoftcopyClient {
	return &softcopyClient{cc}
}

func (c *softcopyClient) GetFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (*GetFileResponse, error) {
	out := new(GetFileResponse)
	err := c.cc.Invoke(ctx, "/scproto.Softcopy/GetFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *softcopyClient) FindFilesWithIdPrefix(ctx context.Context, in *FindFilesWithIdPrefixRequest, opts ...grpc.CallOption) (*FindFilesWithIdPrefixResponse, error) {
	out := new(FindFilesWithIdPrefixResponse)
	err := c.cc.Invoke(ctx, "/scproto.Softcopy/FindFilesWithIdPrefix", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *softcopyClient) FindFilesWithTags(ctx context.Context, in *FindFilesWithTagsRequest, opts ...grpc.CallOption) (*FindFilesWithTagsResponse, error) {
	out := new(FindFilesWithTagsResponse)
	err := c.cc.Invoke(ctx, "/scproto.Softcopy/FindFilesWithTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SoftcopyServer is the server API for Softcopy service.
type SoftcopyServer interface {
	GetFile(context.Context, *GetFileRequest) (*GetFileResponse, error)
	FindFilesWithIdPrefix(context.Context, *FindFilesWithIdPrefixRequest) (*FindFilesWithIdPrefixResponse, error)
	FindFilesWithTags(context.Context, *FindFilesWithTagsRequest) (*FindFilesWithTagsResponse, error)
}

func RegisterSoftcopyServer(s *grpc.Server, srv SoftcopyServer) {
	s.RegisterService(&_Softcopy_serviceDesc, srv)
}

func _Softcopy_GetFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SoftcopyServer).GetFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scproto.Softcopy/GetFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SoftcopyServer).GetFile(ctx, req.(*GetFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Softcopy_FindFilesWithIdPrefix_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindFilesWithIdPrefixRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SoftcopyServer).FindFilesWithIdPrefix(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scproto.Softcopy/FindFilesWithIdPrefix",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SoftcopyServer).FindFilesWithIdPrefix(ctx, req.(*FindFilesWithIdPrefixRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Softcopy_FindFilesWithTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindFilesWithTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SoftcopyServer).FindFilesWithTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scproto.Softcopy/FindFilesWithTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SoftcopyServer).FindFilesWithTags(ctx, req.(*FindFilesWithTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Softcopy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scproto.Softcopy",
	HandlerType: (*SoftcopyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFile",
			Handler:    _Softcopy_GetFile_Handler,
		},
		{
			MethodName: "FindFilesWithIdPrefix",
			Handler:    _Softcopy_FindFilesWithIdPrefix_Handler,
		},
		{
			MethodName: "FindFilesWithTags",
			Handler:    _Softcopy_FindFilesWithTags_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "softcopy.proto",
}

// SoftcopyAdminClient is the client API for SoftcopyAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SoftcopyAdminClient interface {
	AllFiles(ctx context.Context, in *AllFileRequest, opts ...grpc.CallOption) (SoftcopyAdmin_AllFilesClient, error)
	DownloadFile(ctx context.Context, in *DownloadFileRequest, opts ...grpc.CallOption) (SoftcopyAdmin_DownloadFileClient, error)
}

type softcopyAdminClient struct {
	cc *grpc.ClientConn
}

func NewSoftcopyAdminClient(cc *grpc.ClientConn) SoftcopyAdminClient {
	return &softcopyAdminClient{cc}
}

func (c *softcopyAdminClient) AllFiles(ctx context.Context, in *AllFileRequest, opts ...grpc.CallOption) (SoftcopyAdmin_AllFilesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SoftcopyAdmin_serviceDesc.Streams[0], "/scproto.SoftcopyAdmin/AllFiles", opts...)
	if err != nil {
		return nil, err
	}
	x := &softcopyAdminAllFilesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SoftcopyAdmin_AllFilesClient interface {
	Recv() (*TaggedFile, error)
	grpc.ClientStream
}

type softcopyAdminAllFilesClient struct {
	grpc.ClientStream
}

func (x *softcopyAdminAllFilesClient) Recv() (*TaggedFile, error) {
	m := new(TaggedFile)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *softcopyAdminClient) DownloadFile(ctx context.Context, in *DownloadFileRequest, opts ...grpc.CallOption) (SoftcopyAdmin_DownloadFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SoftcopyAdmin_serviceDesc.Streams[1], "/scproto.SoftcopyAdmin/DownloadFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &softcopyAdminDownloadFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SoftcopyAdmin_DownloadFileClient interface {
	Recv() (*DownloadFileResponse, error)
	grpc.ClientStream
}

type softcopyAdminDownloadFileClient struct {
	grpc.ClientStream
}

func (x *softcopyAdminDownloadFileClient) Recv() (*DownloadFileResponse, error) {
	m := new(DownloadFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SoftcopyAdminServer is the server API for SoftcopyAdmin service.
type SoftcopyAdminServer interface {
	AllFiles(*AllFileRequest, SoftcopyAdmin_AllFilesServer) error
	DownloadFile(*DownloadFileRequest, SoftcopyAdmin_DownloadFileServer) error
}

func RegisterSoftcopyAdminServer(s *grpc.Server, srv SoftcopyAdminServer) {
	s.RegisterService(&_SoftcopyAdmin_serviceDesc, srv)
}

func _SoftcopyAdmin_AllFiles_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AllFileRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SoftcopyAdminServer).AllFiles(m, &softcopyAdminAllFilesServer{stream})
}

type SoftcopyAdmin_AllFilesServer interface {
	Send(*TaggedFile) error
	grpc.ServerStream
}

type softcopyAdminAllFilesServer struct {
	grpc.ServerStream
}

func (x *softcopyAdminAllFilesServer) Send(m *TaggedFile) error {
	return x.ServerStream.SendMsg(m)
}

func _SoftcopyAdmin_DownloadFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadFileRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SoftcopyAdminServer).DownloadFile(m, &softcopyAdminDownloadFileServer{stream})
}

type SoftcopyAdmin_DownloadFileServer interface {
	Send(*DownloadFileResponse) error
	grpc.ServerStream
}

type softcopyAdminDownloadFileServer struct {
	grpc.ServerStream
}

func (x *softcopyAdminDownloadFileServer) Send(m *DownloadFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _SoftcopyAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scproto.SoftcopyAdmin",
	HandlerType: (*SoftcopyAdminServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AllFiles",
			Handler:       _SoftcopyAdmin_AllFiles_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DownloadFile",
			Handler:       _SoftcopyAdmin_DownloadFile_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "softcopy.proto",
}

func init() { proto.RegisterFile("softcopy.proto", fileDescriptor_softcopy_e007884a9e150063) }

var fileDescriptor_softcopy_e007884a9e150063 = []byte{
	// 557 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x63, 0xb7, 0x75, 0x27, 0x1f, 0xc0, 0x96, 0x0f, 0x63, 0x5a, 0xe1, 0x2e, 0x2a, 0x44,
	0x1c, 0xdc, 0x2a, 0x1c, 0x90, 0x00, 0x01, 0x95, 0xa2, 0x22, 0x2e, 0x7c, 0x98, 0x48, 0x5c, 0x40,
	0xd1, 0x36, 0xde, 0x6c, 0x56, 0xb2, 0xbd, 0x21, 0xbb, 0x11, 0x84, 0x9f, 0xc1, 0x15, 0x89, 0xdf,
	0x8a, 0xbc, 0x5e, 0x5b, 0x0e, 0x49, 0x8a, 0x7a, 0xdb, 0x99, 0x79, 0x33, 0xf3, 0xde, 0x3c, 0x1b,
	0x3a, 0x52, 0x8c, 0xd5, 0x48, 0x4c, 0x17, 0xe1, 0x74, 0x26, 0x94, 0x40, 0xbb, 0x72, 0xa4, 0x1f,
	0xfe, 0x7d, 0x26, 0x04, 0x4b, 0xe8, 0x89, 0x8e, 0x2e, 0xe6, 0xe3, 0x13, 0xc5, 0x53, 0x2a, 0x15,
	0x49, 0xa7, 0x05, 0x12, 0xff, 0xb6, 0xc0, 0x39, 0xe7, 0x09, 0x45, 0x1d, 0x68, 0xf0, 0xd8, 0xb3,
	0x02, 0xab, 0xbb, 0x17, 0x35, 0x78, 0x8c, 0x10, 0x38, 0x13, 0x22, 0x27, 0x5e, 0x43, 0x67, 0xf4,
	0x1b, 0xf9, 0xe0, 0x8e, 0x79, 0x42, 0x33, 0x92, 0x52, 0xcf, 0xd6, 0xf9, 0x2a, 0x46, 0xaf, 0xa0,
	0x1d, 0x8b, 0xd1, 0x3c, 0xa5, 0x99, 0x1a, 0xc6, 0x44, 0x51, 0xcf, 0x09, 0xac, 0x6e, 0xb3, 0xe7,
	0x87, 0x05, 0x83, 0xb0, 0x64, 0x10, 0x0e, 0x4a, 0x06, 0x51, 0xab, 0x6c, 0xe8, 0x13, 0x45, 0xf3,
	0x85, 0x92, 0xff, 0xa4, 0xde, 0x76, 0x60, 0x75, 0xed, 0x48, 0xbf, 0xf1, 0x47, 0x80, 0x01, 0x61,
	0x8c, 0xc6, 0x9a, 0xe2, 0x11, 0x38, 0xf9, 0x3a, 0x4d, 0xb2, 0xd9, 0x6b, 0x87, 0x46, 0x64, 0x98,
	0x17, 0x23, 0x5d, 0x42, 0x01, 0x38, 0x8a, 0x30, 0xe9, 0x35, 0x02, 0xbb, 0xdb, 0xec, 0xb5, 0x2a,
	0xc8, 0x80, 0xb0, 0x48, 0x57, 0xf0, 0x57, 0xb0, 0x07, 0x84, 0xd5, 0xe4, 0xda, 0xa5, 0x5c, 0x2d,
	0xcb, 0xc8, 0xd5, 0x92, 0x7c, 0x70, 0x47, 0x44, 0x51, 0x26, 0x66, 0x8b, 0x52, 0x6e, 0x19, 0xa3,
	0xdb, 0xb0, 0x23, 0x17, 0x52, 0xd1, 0x54, 0xeb, 0x74, 0x23, 0x13, 0xe1, 0x00, 0x3a, 0x6f, 0xa8,
	0xd2, 0x8c, 0xe8, 0xb7, 0x39, 0x95, 0xea, 0xdf, 0xc3, 0xe2, 0x67, 0x70, 0xad, 0x42, 0xc8, 0xa9,
	0xc8, 0x24, 0x45, 0x8f, 0x96, 0x84, 0xed, 0xd7, 0x59, 0x1b, 0xed, 0x85, 0x3c, 0xfc, 0x14, 0xbc,
	0x73, 0x9e, 0xe9, 0x8c, 0xfc, 0xcc, 0xd5, 0x64, 0x40, 0x98, 0x2c, 0xf7, 0xdc, 0x83, 0x3d, 0x45,
	0xd8, 0x30, 0x67, 0x2e, 0x3d, 0x2b, 0xb0, 0x73, 0xba, 0x8a, 0xb0, 0x77, 0x79, 0x8c, 0x5f, 0xc3,
	0xdd, 0x35, 0x8d, 0x66, 0xfd, 0x03, 0xd8, 0xce, 0xa7, 0x17, 0x5d, 0x2b, 0x87, 0x2d, 0x6a, 0xf8,
	0x39, 0x1c, 0x2c, 0x4d, 0x78, 0x1b, 0x7f, 0x98, 0xd1, 0x31, 0xff, 0x51, 0x5b, 0xcf, 0xe3, 0xe1,
	0x54, 0xe7, 0x8c, 0x5a, 0x97, 0x1b, 0x0c, 0xee, 0xc3, 0xe1, 0x86, 0xe6, 0xab, 0x50, 0xb8, 0x0e,
	0x9d, 0xb3, 0x24, 0xa9, 0xdd, 0x16, 0x1f, 0xc3, 0x7e, 0x5f, 0x7c, 0xcf, 0x12, 0x41, 0xe2, 0xcb,
	0x4e, 0xfe, 0x18, 0x6e, 0x2e, 0xc3, 0xcc, 0x56, 0x04, 0x4e, 0x4c, 0x14, 0xd1, 0xc8, 0x56, 0xa4,
	0xdf, 0xbd, 0x5f, 0x0d, 0x70, 0x3f, 0x99, 0xbf, 0x09, 0xbd, 0x84, 0x5d, 0xe3, 0x15, 0xba, 0x53,
	0x51, 0x5a, 0xf6, 0xd7, 0xf7, 0x56, 0x0b, 0xc5, 0x78, 0xbc, 0x85, 0x26, 0x70, 0x6b, 0xad, 0x6e,
	0x74, 0x5c, 0x13, 0xb8, 0xf9, 0xa8, 0xfe, 0xc3, 0xff, 0xc1, 0xaa, 0x4d, 0x5f, 0xe0, 0xc6, 0x8a,
	0xc1, 0xe8, 0x68, 0x7d, 0x7b, 0xed, 0xab, 0xf1, 0xf1, 0x65, 0x90, 0x72, 0x7a, 0xef, 0x8f, 0x05,
	0xed, 0xf2, 0x28, 0x67, 0x71, 0xca, 0x33, 0xf4, 0x02, 0x5c, 0xe3, 0x85, 0xac, 0x9d, 0x66, 0xd9,
	0x1e, 0x7f, 0xdd, 0x97, 0x8c, 0xb7, 0x4e, 0x2d, 0xf4, 0x1e, 0x5a, 0x75, 0x43, 0xd0, 0x41, 0x05,
	0x5c, 0x63, 0xa7, 0x7f, 0xb8, 0xa1, 0x5a, 0xd2, 0x3b, 0xb5, 0x2e, 0x76, 0x74, 0xfd, 0xc9, 0xdf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x6a, 0xda, 0x61, 0x53, 0x09, 0x05, 0x00, 0x00,
}
