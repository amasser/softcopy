// Code generated by protoc-gen-go. DO NOT EDIT.
// source: papertrail.proto

/*
Package ptproto is a generated protocol buffer package.

It is generated from these files:
	papertrail.proto

It has these top-level messages:
	File
	TaggedFile
	Tag
	GetFileRequest
	GetFileResponse
	FindFilesWithTagsRequest
	FindFilesWithTagsResponse
	FindFilesWithIdPrefixRequest
	FindFilesWithIdPrefixResponse
*/
package ptproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type File struct {
	Id           string                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Hash         string                     `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
	Filename     string                     `protobuf:"bytes,3,opt,name=filename" json:"filename,omitempty"`
	DocumentDate *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=document_date,json=documentDate" json:"document_date,omitempty"`
	Size         int64                      `protobuf:"varint,5,opt,name=size" json:"size,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *File) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *File) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *File) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *File) GetDocumentDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.DocumentDate
	}
	return nil
}

func (m *File) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type TaggedFile struct {
	File *File  `protobuf:"bytes,1,opt,name=file" json:"file,omitempty"`
	Tags []*Tag `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty"`
}

func (m *TaggedFile) Reset()                    { *m = TaggedFile{} }
func (m *TaggedFile) String() string            { return proto.CompactTextString(m) }
func (*TaggedFile) ProtoMessage()               {}
func (*TaggedFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TaggedFile) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TaggedFile) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Tag struct {
	Id       int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Category string `protobuf:"bytes,3,opt,name=category" json:"category,omitempty"`
	System   bool   `protobuf:"varint,4,opt,name=system" json:"system,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Tag) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Tag) GetSystem() bool {
	if m != nil {
		return m.System
	}
	return false
}

type GetFileRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetFileRequest) Reset()                    { *m = GetFileRequest{} }
func (m *GetFileRequest) String() string            { return proto.CompactTextString(m) }
func (*GetFileRequest) ProtoMessage()               {}
func (*GetFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetFileRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetFileResponse struct {
	File *TaggedFile `protobuf:"bytes,1,opt,name=file" json:"file,omitempty"`
}

func (m *GetFileResponse) Reset()                    { *m = GetFileResponse{} }
func (m *GetFileResponse) String() string            { return proto.CompactTextString(m) }
func (*GetFileResponse) ProtoMessage()               {}
func (*GetFileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetFileResponse) GetFile() *TaggedFile {
	if m != nil {
		return m.File
	}
	return nil
}

type FindFilesWithTagsRequest struct {
	TagNames []string `protobuf:"bytes,1,rep,name=tag_names,json=tagNames" json:"tag_names,omitempty"`
}

func (m *FindFilesWithTagsRequest) Reset()                    { *m = FindFilesWithTagsRequest{} }
func (m *FindFilesWithTagsRequest) String() string            { return proto.CompactTextString(m) }
func (*FindFilesWithTagsRequest) ProtoMessage()               {}
func (*FindFilesWithTagsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FindFilesWithTagsRequest) GetTagNames() []string {
	if m != nil {
		return m.TagNames
	}
	return nil
}

type FindFilesWithTagsResponse struct {
	Files []*File `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
}

func (m *FindFilesWithTagsResponse) Reset()                    { *m = FindFilesWithTagsResponse{} }
func (m *FindFilesWithTagsResponse) String() string            { return proto.CompactTextString(m) }
func (*FindFilesWithTagsResponse) ProtoMessage()               {}
func (*FindFilesWithTagsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *FindFilesWithTagsResponse) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

type FindFilesWithIdPrefixRequest struct {
	IdPrefix string `protobuf:"bytes,1,opt,name=id_prefix,json=idPrefix" json:"id_prefix,omitempty"`
}

func (m *FindFilesWithIdPrefixRequest) Reset()                    { *m = FindFilesWithIdPrefixRequest{} }
func (m *FindFilesWithIdPrefixRequest) String() string            { return proto.CompactTextString(m) }
func (*FindFilesWithIdPrefixRequest) ProtoMessage()               {}
func (*FindFilesWithIdPrefixRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *FindFilesWithIdPrefixRequest) GetIdPrefix() string {
	if m != nil {
		return m.IdPrefix
	}
	return ""
}

type FindFilesWithIdPrefixResponse struct {
	Files []*File `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
}

func (m *FindFilesWithIdPrefixResponse) Reset()                    { *m = FindFilesWithIdPrefixResponse{} }
func (m *FindFilesWithIdPrefixResponse) String() string            { return proto.CompactTextString(m) }
func (*FindFilesWithIdPrefixResponse) ProtoMessage()               {}
func (*FindFilesWithIdPrefixResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *FindFilesWithIdPrefixResponse) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

func init() {
	proto.RegisterType((*File)(nil), "ptproto.File")
	proto.RegisterType((*TaggedFile)(nil), "ptproto.TaggedFile")
	proto.RegisterType((*Tag)(nil), "ptproto.Tag")
	proto.RegisterType((*GetFileRequest)(nil), "ptproto.GetFileRequest")
	proto.RegisterType((*GetFileResponse)(nil), "ptproto.GetFileResponse")
	proto.RegisterType((*FindFilesWithTagsRequest)(nil), "ptproto.FindFilesWithTagsRequest")
	proto.RegisterType((*FindFilesWithTagsResponse)(nil), "ptproto.FindFilesWithTagsResponse")
	proto.RegisterType((*FindFilesWithIdPrefixRequest)(nil), "ptproto.FindFilesWithIdPrefixRequest")
	proto.RegisterType((*FindFilesWithIdPrefixResponse)(nil), "ptproto.FindFilesWithIdPrefixResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Papertrail service

type PapertrailClient interface {
	GetFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (*GetFileResponse, error)
	FindFilesWithIdPrefix(ctx context.Context, in *FindFilesWithIdPrefixRequest, opts ...grpc.CallOption) (*FindFilesWithIdPrefixResponse, error)
	FindFilesWithTags(ctx context.Context, in *FindFilesWithTagsRequest, opts ...grpc.CallOption) (*FindFilesWithTagsResponse, error)
}

type papertrailClient struct {
	cc *grpc.ClientConn
}

func NewPapertrailClient(cc *grpc.ClientConn) PapertrailClient {
	return &papertrailClient{cc}
}

func (c *papertrailClient) GetFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (*GetFileResponse, error) {
	out := new(GetFileResponse)
	err := grpc.Invoke(ctx, "/ptproto.Papertrail/GetFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *papertrailClient) FindFilesWithIdPrefix(ctx context.Context, in *FindFilesWithIdPrefixRequest, opts ...grpc.CallOption) (*FindFilesWithIdPrefixResponse, error) {
	out := new(FindFilesWithIdPrefixResponse)
	err := grpc.Invoke(ctx, "/ptproto.Papertrail/FindFilesWithIdPrefix", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *papertrailClient) FindFilesWithTags(ctx context.Context, in *FindFilesWithTagsRequest, opts ...grpc.CallOption) (*FindFilesWithTagsResponse, error) {
	out := new(FindFilesWithTagsResponse)
	err := grpc.Invoke(ctx, "/ptproto.Papertrail/FindFilesWithTags", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Papertrail service

type PapertrailServer interface {
	GetFile(context.Context, *GetFileRequest) (*GetFileResponse, error)
	FindFilesWithIdPrefix(context.Context, *FindFilesWithIdPrefixRequest) (*FindFilesWithIdPrefixResponse, error)
	FindFilesWithTags(context.Context, *FindFilesWithTagsRequest) (*FindFilesWithTagsResponse, error)
}

func RegisterPapertrailServer(s *grpc.Server, srv PapertrailServer) {
	s.RegisterService(&_Papertrail_serviceDesc, srv)
}

func _Papertrail_GetFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PapertrailServer).GetFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ptproto.Papertrail/GetFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PapertrailServer).GetFile(ctx, req.(*GetFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Papertrail_FindFilesWithIdPrefix_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindFilesWithIdPrefixRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PapertrailServer).FindFilesWithIdPrefix(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ptproto.Papertrail/FindFilesWithIdPrefix",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PapertrailServer).FindFilesWithIdPrefix(ctx, req.(*FindFilesWithIdPrefixRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Papertrail_FindFilesWithTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindFilesWithTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PapertrailServer).FindFilesWithTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ptproto.Papertrail/FindFilesWithTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PapertrailServer).FindFilesWithTags(ctx, req.(*FindFilesWithTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Papertrail_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ptproto.Papertrail",
	HandlerType: (*PapertrailServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFile",
			Handler:    _Papertrail_GetFile_Handler,
		},
		{
			MethodName: "FindFilesWithIdPrefix",
			Handler:    _Papertrail_FindFilesWithIdPrefix_Handler,
		},
		{
			MethodName: "FindFilesWithTags",
			Handler:    _Papertrail_FindFilesWithTags_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "papertrail.proto",
}

func init() { proto.RegisterFile("papertrail.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4f, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0xf1, 0x9f, 0xb6, 0xe9, 0xa4, 0x2d, 0xb0, 0x08, 0x58, 0x0c, 0x08, 0x77, 0x11, 0x90,
	0x93, 0x2b, 0x85, 0x03, 0x12, 0x48, 0xc0, 0xa1, 0x2a, 0xe2, 0x82, 0x8a, 0x65, 0x89, 0x0b, 0x28,
	0xda, 0xd6, 0x93, 0xcd, 0x4a, 0x71, 0x6c, 0xbc, 0x1b, 0x89, 0xf2, 0x39, 0xb8, 0xf1, 0x65, 0x91,
	0xc7, 0x7f, 0xe4, 0x90, 0x04, 0xd4, 0xdb, 0xce, 0xce, 0x9b, 0x7d, 0xef, 0x37, 0x36, 0xdc, 0x2a,
	0x64, 0x81, 0xa5, 0x2d, 0xa5, 0x9e, 0x47, 0x45, 0x99, 0xdb, 0x9c, 0xed, 0x15, 0x96, 0x0e, 0xc1,
	0x13, 0x95, 0xe7, 0x6a, 0x8e, 0x27, 0x54, 0x5d, 0x2c, 0xa7, 0x27, 0x56, 0x67, 0x68, 0xac, 0xcc,
	0x8a, 0x5a, 0x29, 0x7e, 0x3b, 0xe0, 0x9f, 0xe9, 0x39, 0xb2, 0x23, 0x70, 0x75, 0xca, 0x9d, 0xd0,
	0x19, 0xed, 0xc7, 0xae, 0x4e, 0x19, 0x03, 0x7f, 0x26, 0xcd, 0x8c, 0xbb, 0x74, 0x43, 0x67, 0x16,
	0xc0, 0x60, 0xaa, 0xe7, 0xb8, 0x90, 0x19, 0x72, 0x8f, 0xee, 0xbb, 0x9a, 0xbd, 0x83, 0xc3, 0x34,
	0xbf, 0x5c, 0x66, 0xb8, 0xb0, 0x93, 0x54, 0x5a, 0xe4, 0x7e, 0xe8, 0x8c, 0x86, 0xe3, 0x20, 0xaa,
	0x13, 0x44, 0x6d, 0x82, 0x28, 0x69, 0x13, 0xc4, 0x07, 0xed, 0xc0, 0xa9, 0xb4, 0x58, 0x19, 0x1a,
	0xfd, 0x13, 0xf9, 0x4e, 0xe8, 0x8c, 0xbc, 0x98, 0xce, 0xe2, 0x33, 0x40, 0x22, 0x95, 0xc2, 0x94,
	0x22, 0x1e, 0x83, 0x5f, 0xd9, 0x51, 0xc8, 0xe1, 0xf8, 0x30, 0x6a, 0x20, 0xa3, 0xaa, 0x19, 0x53,
	0x8b, 0x85, 0xe0, 0x5b, 0xa9, 0x0c, 0x77, 0x43, 0x6f, 0x34, 0x1c, 0x1f, 0x74, 0x92, 0x44, 0xaa,
	0x98, 0x3a, 0xe2, 0x1b, 0x78, 0x89, 0x54, 0x3d, 0x5c, 0xaf, 0xc5, 0x25, 0xac, 0x06, 0x97, 0x90,
	0x02, 0x18, 0x5c, 0x4a, 0x8b, 0x2a, 0x2f, 0xaf, 0x5a, 0xdc, 0xb6, 0x66, 0xf7, 0x60, 0xd7, 0x5c,
	0x19, 0x8b, 0x19, 0x71, 0x0e, 0xe2, 0xa6, 0x12, 0x21, 0x1c, 0x7d, 0x40, 0x4b, 0x89, 0xf0, 0xfb,
	0x12, 0x8d, 0xfd, 0x7b, 0xb1, 0xe2, 0x35, 0xdc, 0xec, 0x14, 0xa6, 0xc8, 0x17, 0x06, 0xd9, 0x8b,
	0x15, 0xb0, 0x3b, 0xfd, 0xd4, 0x0d, 0x7b, 0x8d, 0x27, 0x5e, 0x01, 0x3f, 0xd3, 0x0b, 0xba, 0x31,
	0x5f, 0xb4, 0x9d, 0x25, 0x52, 0x99, 0xd6, 0xe7, 0x21, 0xec, 0x5b, 0xa9, 0x26, 0x55, 0x72, 0xc3,
	0x9d, 0xd0, 0xab, 0xe2, 0x5a, 0xa9, 0x3e, 0x55, 0xb5, 0x78, 0x0f, 0x0f, 0x36, 0x0c, 0x36, 0xf6,
	0x4f, 0x61, 0xa7, 0x7a, 0xbd, 0x9e, 0x5a, 0x5b, 0x6c, 0xdd, 0x13, 0x6f, 0xe0, 0xd1, 0xca, 0x0b,
	0x1f, 0xd3, 0xf3, 0x12, 0xa7, 0xfa, 0x47, 0xcf, 0x5e, 0xa7, 0x93, 0x82, 0xee, 0x1a, 0xda, 0x81,
	0x6e, 0x34, 0xe2, 0x14, 0x1e, 0x6f, 0x19, 0xbe, 0x46, 0x84, 0xf1, 0x2f, 0x17, 0xe0, 0xbc, 0xfb,
	0xd5, 0xd9, 0x5b, 0xd8, 0x6b, 0x16, 0xc9, 0xee, 0x77, 0xfa, 0xd5, 0xe5, 0x07, 0x7c, 0xbd, 0x51,
	0x3b, 0x8a, 0x1b, 0x6c, 0x06, 0x77, 0x37, 0x86, 0x62, 0xcf, 0x7a, 0xee, 0xdb, 0x89, 0x83, 0xe7,
	0xff, 0x93, 0x75, 0x4e, 0x5f, 0xe1, 0xf6, 0xda, 0xf6, 0xd9, 0xf1, 0xe6, 0xf1, 0xde, 0x27, 0x0d,
	0xc4, 0xbf, 0x24, 0xed, 0xeb, 0x17, 0xbb, 0x24, 0x79, 0xf9, 0x27, 0x00, 0x00, 0xff, 0xff, 0x96,
	0xcd, 0x16, 0x4e, 0x07, 0x04, 0x00, 0x00,
}
