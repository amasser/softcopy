// Code generated by github.com/efritz/go-mockgen 0.1.0; DO NOT EDIT.

package protomock

import (
	"context"
	proto "github.com/aphistic/softcopy/pkg/proto"
	grpc "google.golang.org/grpc"
	"sync"
)

// MockSoftcopyClient is a mock implementation of the SoftcopyClient
// interface (from the package github.com/aphistic/softcopy/pkg/proto) used
// for unit testing.
type MockSoftcopyClient struct {
	// CloseFileFunc is an instance of a mock function object controlling
	// the behavior of the method CloseFile.
	CloseFileFunc *SoftcopyClientCloseFileFunc
	// CreateFileFunc is an instance of a mock function object controlling
	// the behavior of the method CreateFile.
	CreateFileFunc *SoftcopyClientCreateFileFunc
	// CreateTagsFunc is an instance of a mock function object controlling
	// the behavior of the method CreateTags.
	CreateTagsFunc *SoftcopyClientCreateTagsFunc
	// FindFilesWithDateFunc is an instance of a mock function object
	// controlling the behavior of the method FindFilesWithDate.
	FindFilesWithDateFunc *SoftcopyClientFindFilesWithDateFunc
	// FindFilesWithIdPrefixFunc is an instance of a mock function object
	// controlling the behavior of the method FindFilesWithIdPrefix.
	FindFilesWithIdPrefixFunc *SoftcopyClientFindFilesWithIdPrefixFunc
	// FindFilesWithTagsFunc is an instance of a mock function object
	// controlling the behavior of the method FindFilesWithTags.
	FindFilesWithTagsFunc *SoftcopyClientFindFilesWithTagsFunc
	// FindTagByNameFunc is an instance of a mock function object
	// controlling the behavior of the method FindTagByName.
	FindTagByNameFunc *SoftcopyClientFindTagByNameFunc
	// FlushFileFunc is an instance of a mock function object controlling
	// the behavior of the method FlushFile.
	FlushFileFunc *SoftcopyClientFlushFileFunc
	// GetAllTagsFunc is an instance of a mock function object controlling
	// the behavior of the method GetAllTags.
	GetAllTagsFunc *SoftcopyClientGetAllTagsFunc
	// GetFileFunc is an instance of a mock function object controlling the
	// behavior of the method GetFile.
	GetFileFunc *SoftcopyClientGetFileFunc
	// GetFileDaysFunc is an instance of a mock function object controlling
	// the behavior of the method GetFileDays.
	GetFileDaysFunc *SoftcopyClientGetFileDaysFunc
	// GetFileMonthsFunc is an instance of a mock function object
	// controlling the behavior of the method GetFileMonths.
	GetFileMonthsFunc *SoftcopyClientGetFileMonthsFunc
	// GetFileWithDateFunc is an instance of a mock function object
	// controlling the behavior of the method GetFileWithDate.
	GetFileWithDateFunc *SoftcopyClientGetFileWithDateFunc
	// GetFileYearsFunc is an instance of a mock function object controlling
	// the behavior of the method GetFileYears.
	GetFileYearsFunc *SoftcopyClientGetFileYearsFunc
	// GetTagsForFileFunc is an instance of a mock function object
	// controlling the behavior of the method GetTagsForFile.
	GetTagsForFileFunc *SoftcopyClientGetTagsForFileFunc
	// OpenFileFunc is an instance of a mock function object controlling the
	// behavior of the method OpenFile.
	OpenFileFunc *SoftcopyClientOpenFileFunc
	// ReadFileFunc is an instance of a mock function object controlling the
	// behavior of the method ReadFile.
	ReadFileFunc *SoftcopyClientReadFileFunc
	// RemoveFileFunc is an instance of a mock function object controlling
	// the behavior of the method RemoveFile.
	RemoveFileFunc *SoftcopyClientRemoveFileFunc
	// UpdateFileDateFunc is an instance of a mock function object
	// controlling the behavior of the method UpdateFileDate.
	UpdateFileDateFunc *SoftcopyClientUpdateFileDateFunc
	// UpdateFileTagsFunc is an instance of a mock function object
	// controlling the behavior of the method UpdateFileTags.
	UpdateFileTagsFunc *SoftcopyClientUpdateFileTagsFunc
	// WriteFileFunc is an instance of a mock function object controlling
	// the behavior of the method WriteFile.
	WriteFileFunc *SoftcopyClientWriteFileFunc
}

// NewMockSoftcopyClient creates a new mock of the SoftcopyClient interface.
// All methods return zero values for all results, unless overwritten.
func NewMockSoftcopyClient() *MockSoftcopyClient {
	return &MockSoftcopyClient{
		CloseFileFunc: &SoftcopyClientCloseFileFunc{
			defaultHook: func(context.Context, *proto.CloseFileRequest, ...grpc.CallOption) (*proto.CloseFileResponse, error) {
				return nil, nil
			},
		},
		CreateFileFunc: &SoftcopyClientCreateFileFunc{
			defaultHook: func(context.Context, *proto.CreateFileRequest, ...grpc.CallOption) (*proto.CreateFileResponse, error) {
				return nil, nil
			},
		},
		CreateTagsFunc: &SoftcopyClientCreateTagsFunc{
			defaultHook: func(context.Context, *proto.CreateTagsRequest, ...grpc.CallOption) (*proto.CreateTagsResponse, error) {
				return nil, nil
			},
		},
		FindFilesWithDateFunc: &SoftcopyClientFindFilesWithDateFunc{
			defaultHook: func(context.Context, *proto.FindFilesWithDateRequest, ...grpc.CallOption) (*proto.FindFilesWithDateResponse, error) {
				return nil, nil
			},
		},
		FindFilesWithIdPrefixFunc: &SoftcopyClientFindFilesWithIdPrefixFunc{
			defaultHook: func(context.Context, *proto.FindFilesWithIdPrefixRequest, ...grpc.CallOption) (*proto.FindFilesWithIdPrefixResponse, error) {
				return nil, nil
			},
		},
		FindFilesWithTagsFunc: &SoftcopyClientFindFilesWithTagsFunc{
			defaultHook: func(context.Context, *proto.FindFilesWithTagsRequest, ...grpc.CallOption) (*proto.FindFilesWithTagsResponse, error) {
				return nil, nil
			},
		},
		FindTagByNameFunc: &SoftcopyClientFindTagByNameFunc{
			defaultHook: func(context.Context, *proto.FindTagByNameRequest, ...grpc.CallOption) (*proto.FindTagByNameResponse, error) {
				return nil, nil
			},
		},
		FlushFileFunc: &SoftcopyClientFlushFileFunc{
			defaultHook: func(context.Context, *proto.FlushFileRequest, ...grpc.CallOption) (*proto.FlushFileResponse, error) {
				return nil, nil
			},
		},
		GetAllTagsFunc: &SoftcopyClientGetAllTagsFunc{
			defaultHook: func(context.Context, *proto.GetAllTagsRequest, ...grpc.CallOption) (*proto.GetAllTagsResponse, error) {
				return nil, nil
			},
		},
		GetFileFunc: &SoftcopyClientGetFileFunc{
			defaultHook: func(context.Context, *proto.GetFileRequest, ...grpc.CallOption) (*proto.GetFileResponse, error) {
				return nil, nil
			},
		},
		GetFileDaysFunc: &SoftcopyClientGetFileDaysFunc{
			defaultHook: func(context.Context, *proto.GetFileDaysRequest, ...grpc.CallOption) (*proto.GetFileDaysResponse, error) {
				return nil, nil
			},
		},
		GetFileMonthsFunc: &SoftcopyClientGetFileMonthsFunc{
			defaultHook: func(context.Context, *proto.GetFileMonthsRequest, ...grpc.CallOption) (*proto.GetFileMonthsResponse, error) {
				return nil, nil
			},
		},
		GetFileWithDateFunc: &SoftcopyClientGetFileWithDateFunc{
			defaultHook: func(context.Context, *proto.GetFileWithDateRequest, ...grpc.CallOption) (*proto.GetFileWithDateResponse, error) {
				return nil, nil
			},
		},
		GetFileYearsFunc: &SoftcopyClientGetFileYearsFunc{
			defaultHook: func(context.Context, *proto.GetFileYearsRequest, ...grpc.CallOption) (*proto.GetFileYearsResponse, error) {
				return nil, nil
			},
		},
		GetTagsForFileFunc: &SoftcopyClientGetTagsForFileFunc{
			defaultHook: func(context.Context, *proto.GetTagsForFileRequest, ...grpc.CallOption) (*proto.GetTagsForFileResponse, error) {
				return nil, nil
			},
		},
		OpenFileFunc: &SoftcopyClientOpenFileFunc{
			defaultHook: func(context.Context, *proto.OpenFileRequest, ...grpc.CallOption) (*proto.OpenFileResponse, error) {
				return nil, nil
			},
		},
		ReadFileFunc: &SoftcopyClientReadFileFunc{
			defaultHook: func(context.Context, *proto.ReadFileRequest, ...grpc.CallOption) (*proto.ReadFileResponse, error) {
				return nil, nil
			},
		},
		RemoveFileFunc: &SoftcopyClientRemoveFileFunc{
			defaultHook: func(context.Context, *proto.RemoveFileRequest, ...grpc.CallOption) (*proto.RemoveFileResponse, error) {
				return nil, nil
			},
		},
		UpdateFileDateFunc: &SoftcopyClientUpdateFileDateFunc{
			defaultHook: func(context.Context, *proto.UpdateFileDateRequest, ...grpc.CallOption) (*proto.UpdateFileDateResponse, error) {
				return nil, nil
			},
		},
		UpdateFileTagsFunc: &SoftcopyClientUpdateFileTagsFunc{
			defaultHook: func(context.Context, *proto.UpdateFileTagsRequest, ...grpc.CallOption) (*proto.UpdateFileTagsResponse, error) {
				return nil, nil
			},
		},
		WriteFileFunc: &SoftcopyClientWriteFileFunc{
			defaultHook: func(context.Context, *proto.WriteFileRequest, ...grpc.CallOption) (*proto.WriteFileResponse, error) {
				return nil, nil
			},
		},
	}
}

// NewMockSoftcopyClientFrom creates a new mock of the MockSoftcopyClient
// interface. All methods delegate to the given implementation, unless
// overwritten.
func NewMockSoftcopyClientFrom(i proto.SoftcopyClient) *MockSoftcopyClient {
	return &MockSoftcopyClient{
		CloseFileFunc: &SoftcopyClientCloseFileFunc{
			defaultHook: i.CloseFile,
		},
		CreateFileFunc: &SoftcopyClientCreateFileFunc{
			defaultHook: i.CreateFile,
		},
		CreateTagsFunc: &SoftcopyClientCreateTagsFunc{
			defaultHook: i.CreateTags,
		},
		FindFilesWithDateFunc: &SoftcopyClientFindFilesWithDateFunc{
			defaultHook: i.FindFilesWithDate,
		},
		FindFilesWithIdPrefixFunc: &SoftcopyClientFindFilesWithIdPrefixFunc{
			defaultHook: i.FindFilesWithIdPrefix,
		},
		FindFilesWithTagsFunc: &SoftcopyClientFindFilesWithTagsFunc{
			defaultHook: i.FindFilesWithTags,
		},
		FindTagByNameFunc: &SoftcopyClientFindTagByNameFunc{
			defaultHook: i.FindTagByName,
		},
		FlushFileFunc: &SoftcopyClientFlushFileFunc{
			defaultHook: i.FlushFile,
		},
		GetAllTagsFunc: &SoftcopyClientGetAllTagsFunc{
			defaultHook: i.GetAllTags,
		},
		GetFileFunc: &SoftcopyClientGetFileFunc{
			defaultHook: i.GetFile,
		},
		GetFileDaysFunc: &SoftcopyClientGetFileDaysFunc{
			defaultHook: i.GetFileDays,
		},
		GetFileMonthsFunc: &SoftcopyClientGetFileMonthsFunc{
			defaultHook: i.GetFileMonths,
		},
		GetFileWithDateFunc: &SoftcopyClientGetFileWithDateFunc{
			defaultHook: i.GetFileWithDate,
		},
		GetFileYearsFunc: &SoftcopyClientGetFileYearsFunc{
			defaultHook: i.GetFileYears,
		},
		GetTagsForFileFunc: &SoftcopyClientGetTagsForFileFunc{
			defaultHook: i.GetTagsForFile,
		},
		OpenFileFunc: &SoftcopyClientOpenFileFunc{
			defaultHook: i.OpenFile,
		},
		ReadFileFunc: &SoftcopyClientReadFileFunc{
			defaultHook: i.ReadFile,
		},
		RemoveFileFunc: &SoftcopyClientRemoveFileFunc{
			defaultHook: i.RemoveFile,
		},
		UpdateFileDateFunc: &SoftcopyClientUpdateFileDateFunc{
			defaultHook: i.UpdateFileDate,
		},
		UpdateFileTagsFunc: &SoftcopyClientUpdateFileTagsFunc{
			defaultHook: i.UpdateFileTags,
		},
		WriteFileFunc: &SoftcopyClientWriteFileFunc{
			defaultHook: i.WriteFile,
		},
	}
}

// SoftcopyClientCloseFileFunc describes the behavior when the CloseFile
// method of the parent MockSoftcopyClient instance is invoked.
type SoftcopyClientCloseFileFunc struct {
	defaultHook func(context.Context, *proto.CloseFileRequest, ...grpc.CallOption) (*proto.CloseFileResponse, error)
	hooks       []func(context.Context, *proto.CloseFileRequest, ...grpc.CallOption) (*proto.CloseFileResponse, error)
	history     []SoftcopyClientCloseFileFuncCall
	mutex       sync.Mutex
}

// CloseFile delegates to the next hook function in the queue and stores the
// parameter and result values of this invocation.
func (m *MockSoftcopyClient) CloseFile(v0 context.Context, v1 *proto.CloseFileRequest, v2 ...grpc.CallOption) (*proto.CloseFileResponse, error) {
	r0, r1 := m.CloseFileFunc.nextHook()(v0, v1, v2...)
	m.CloseFileFunc.appendCall(SoftcopyClientCloseFileFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the CloseFile method of
// the parent MockSoftcopyClient instance is invoked and the hook queue is
// empty.
func (f *SoftcopyClientCloseFileFunc) SetDefaultHook(hook func(context.Context, *proto.CloseFileRequest, ...grpc.CallOption) (*proto.CloseFileResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// CloseFile method of the parent MockSoftcopyClient instance inovkes the
// hook at the front of the queue and discards it. After the queue is empty,
// the default hook function is invoked for any future action.
func (f *SoftcopyClientCloseFileFunc) PushHook(hook func(context.Context, *proto.CloseFileRequest, ...grpc.CallOption) (*proto.CloseFileResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientCloseFileFunc) SetDefaultReturn(r0 *proto.CloseFileResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.CloseFileRequest, ...grpc.CallOption) (*proto.CloseFileResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientCloseFileFunc) PushReturn(r0 *proto.CloseFileResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.CloseFileRequest, ...grpc.CallOption) (*proto.CloseFileResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientCloseFileFunc) nextHook() func(context.Context, *proto.CloseFileRequest, ...grpc.CallOption) (*proto.CloseFileResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientCloseFileFunc) appendCall(r0 SoftcopyClientCloseFileFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientCloseFileFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientCloseFileFunc) History() []SoftcopyClientCloseFileFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientCloseFileFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientCloseFileFuncCall is an object that describes an invocation
// of method CloseFile on an instance of MockSoftcopyClient.
type SoftcopyClientCloseFileFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.CloseFileRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.CloseFileResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientCloseFileFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientCloseFileFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientCreateFileFunc describes the behavior when the CreateFile
// method of the parent MockSoftcopyClient instance is invoked.
type SoftcopyClientCreateFileFunc struct {
	defaultHook func(context.Context, *proto.CreateFileRequest, ...grpc.CallOption) (*proto.CreateFileResponse, error)
	hooks       []func(context.Context, *proto.CreateFileRequest, ...grpc.CallOption) (*proto.CreateFileResponse, error)
	history     []SoftcopyClientCreateFileFuncCall
	mutex       sync.Mutex
}

// CreateFile delegates to the next hook function in the queue and stores
// the parameter and result values of this invocation.
func (m *MockSoftcopyClient) CreateFile(v0 context.Context, v1 *proto.CreateFileRequest, v2 ...grpc.CallOption) (*proto.CreateFileResponse, error) {
	r0, r1 := m.CreateFileFunc.nextHook()(v0, v1, v2...)
	m.CreateFileFunc.appendCall(SoftcopyClientCreateFileFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the CreateFile method of
// the parent MockSoftcopyClient instance is invoked and the hook queue is
// empty.
func (f *SoftcopyClientCreateFileFunc) SetDefaultHook(hook func(context.Context, *proto.CreateFileRequest, ...grpc.CallOption) (*proto.CreateFileResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// CreateFile method of the parent MockSoftcopyClient instance inovkes the
// hook at the front of the queue and discards it. After the queue is empty,
// the default hook function is invoked for any future action.
func (f *SoftcopyClientCreateFileFunc) PushHook(hook func(context.Context, *proto.CreateFileRequest, ...grpc.CallOption) (*proto.CreateFileResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientCreateFileFunc) SetDefaultReturn(r0 *proto.CreateFileResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.CreateFileRequest, ...grpc.CallOption) (*proto.CreateFileResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientCreateFileFunc) PushReturn(r0 *proto.CreateFileResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.CreateFileRequest, ...grpc.CallOption) (*proto.CreateFileResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientCreateFileFunc) nextHook() func(context.Context, *proto.CreateFileRequest, ...grpc.CallOption) (*proto.CreateFileResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientCreateFileFunc) appendCall(r0 SoftcopyClientCreateFileFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientCreateFileFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientCreateFileFunc) History() []SoftcopyClientCreateFileFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientCreateFileFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientCreateFileFuncCall is an object that describes an
// invocation of method CreateFile on an instance of MockSoftcopyClient.
type SoftcopyClientCreateFileFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.CreateFileRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.CreateFileResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientCreateFileFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientCreateFileFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientCreateTagsFunc describes the behavior when the CreateTags
// method of the parent MockSoftcopyClient instance is invoked.
type SoftcopyClientCreateTagsFunc struct {
	defaultHook func(context.Context, *proto.CreateTagsRequest, ...grpc.CallOption) (*proto.CreateTagsResponse, error)
	hooks       []func(context.Context, *proto.CreateTagsRequest, ...grpc.CallOption) (*proto.CreateTagsResponse, error)
	history     []SoftcopyClientCreateTagsFuncCall
	mutex       sync.Mutex
}

// CreateTags delegates to the next hook function in the queue and stores
// the parameter and result values of this invocation.
func (m *MockSoftcopyClient) CreateTags(v0 context.Context, v1 *proto.CreateTagsRequest, v2 ...grpc.CallOption) (*proto.CreateTagsResponse, error) {
	r0, r1 := m.CreateTagsFunc.nextHook()(v0, v1, v2...)
	m.CreateTagsFunc.appendCall(SoftcopyClientCreateTagsFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the CreateTags method of
// the parent MockSoftcopyClient instance is invoked and the hook queue is
// empty.
func (f *SoftcopyClientCreateTagsFunc) SetDefaultHook(hook func(context.Context, *proto.CreateTagsRequest, ...grpc.CallOption) (*proto.CreateTagsResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// CreateTags method of the parent MockSoftcopyClient instance inovkes the
// hook at the front of the queue and discards it. After the queue is empty,
// the default hook function is invoked for any future action.
func (f *SoftcopyClientCreateTagsFunc) PushHook(hook func(context.Context, *proto.CreateTagsRequest, ...grpc.CallOption) (*proto.CreateTagsResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientCreateTagsFunc) SetDefaultReturn(r0 *proto.CreateTagsResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.CreateTagsRequest, ...grpc.CallOption) (*proto.CreateTagsResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientCreateTagsFunc) PushReturn(r0 *proto.CreateTagsResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.CreateTagsRequest, ...grpc.CallOption) (*proto.CreateTagsResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientCreateTagsFunc) nextHook() func(context.Context, *proto.CreateTagsRequest, ...grpc.CallOption) (*proto.CreateTagsResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientCreateTagsFunc) appendCall(r0 SoftcopyClientCreateTagsFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientCreateTagsFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientCreateTagsFunc) History() []SoftcopyClientCreateTagsFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientCreateTagsFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientCreateTagsFuncCall is an object that describes an
// invocation of method CreateTags on an instance of MockSoftcopyClient.
type SoftcopyClientCreateTagsFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.CreateTagsRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.CreateTagsResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientCreateTagsFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientCreateTagsFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientFindFilesWithDateFunc describes the behavior when the
// FindFilesWithDate method of the parent MockSoftcopyClient instance is
// invoked.
type SoftcopyClientFindFilesWithDateFunc struct {
	defaultHook func(context.Context, *proto.FindFilesWithDateRequest, ...grpc.CallOption) (*proto.FindFilesWithDateResponse, error)
	hooks       []func(context.Context, *proto.FindFilesWithDateRequest, ...grpc.CallOption) (*proto.FindFilesWithDateResponse, error)
	history     []SoftcopyClientFindFilesWithDateFuncCall
	mutex       sync.Mutex
}

// FindFilesWithDate delegates to the next hook function in the queue and
// stores the parameter and result values of this invocation.
func (m *MockSoftcopyClient) FindFilesWithDate(v0 context.Context, v1 *proto.FindFilesWithDateRequest, v2 ...grpc.CallOption) (*proto.FindFilesWithDateResponse, error) {
	r0, r1 := m.FindFilesWithDateFunc.nextHook()(v0, v1, v2...)
	m.FindFilesWithDateFunc.appendCall(SoftcopyClientFindFilesWithDateFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the FindFilesWithDate
// method of the parent MockSoftcopyClient instance is invoked and the hook
// queue is empty.
func (f *SoftcopyClientFindFilesWithDateFunc) SetDefaultHook(hook func(context.Context, *proto.FindFilesWithDateRequest, ...grpc.CallOption) (*proto.FindFilesWithDateResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// FindFilesWithDate method of the parent MockSoftcopyClient instance
// inovkes the hook at the front of the queue and discards it. After the
// queue is empty, the default hook function is invoked for any future
// action.
func (f *SoftcopyClientFindFilesWithDateFunc) PushHook(hook func(context.Context, *proto.FindFilesWithDateRequest, ...grpc.CallOption) (*proto.FindFilesWithDateResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientFindFilesWithDateFunc) SetDefaultReturn(r0 *proto.FindFilesWithDateResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.FindFilesWithDateRequest, ...grpc.CallOption) (*proto.FindFilesWithDateResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientFindFilesWithDateFunc) PushReturn(r0 *proto.FindFilesWithDateResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.FindFilesWithDateRequest, ...grpc.CallOption) (*proto.FindFilesWithDateResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientFindFilesWithDateFunc) nextHook() func(context.Context, *proto.FindFilesWithDateRequest, ...grpc.CallOption) (*proto.FindFilesWithDateResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientFindFilesWithDateFunc) appendCall(r0 SoftcopyClientFindFilesWithDateFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientFindFilesWithDateFuncCall
// objects describing the invocations of this function.
func (f *SoftcopyClientFindFilesWithDateFunc) History() []SoftcopyClientFindFilesWithDateFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientFindFilesWithDateFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientFindFilesWithDateFuncCall is an object that describes an
// invocation of method FindFilesWithDate on an instance of
// MockSoftcopyClient.
type SoftcopyClientFindFilesWithDateFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.FindFilesWithDateRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.FindFilesWithDateResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientFindFilesWithDateFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientFindFilesWithDateFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientFindFilesWithIdPrefixFunc describes the behavior when the
// FindFilesWithIdPrefix method of the parent MockSoftcopyClient instance is
// invoked.
type SoftcopyClientFindFilesWithIdPrefixFunc struct {
	defaultHook func(context.Context, *proto.FindFilesWithIdPrefixRequest, ...grpc.CallOption) (*proto.FindFilesWithIdPrefixResponse, error)
	hooks       []func(context.Context, *proto.FindFilesWithIdPrefixRequest, ...grpc.CallOption) (*proto.FindFilesWithIdPrefixResponse, error)
	history     []SoftcopyClientFindFilesWithIdPrefixFuncCall
	mutex       sync.Mutex
}

// FindFilesWithIdPrefix delegates to the next hook function in the queue
// and stores the parameter and result values of this invocation.
func (m *MockSoftcopyClient) FindFilesWithIdPrefix(v0 context.Context, v1 *proto.FindFilesWithIdPrefixRequest, v2 ...grpc.CallOption) (*proto.FindFilesWithIdPrefixResponse, error) {
	r0, r1 := m.FindFilesWithIdPrefixFunc.nextHook()(v0, v1, v2...)
	m.FindFilesWithIdPrefixFunc.appendCall(SoftcopyClientFindFilesWithIdPrefixFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the
// FindFilesWithIdPrefix method of the parent MockSoftcopyClient instance is
// invoked and the hook queue is empty.
func (f *SoftcopyClientFindFilesWithIdPrefixFunc) SetDefaultHook(hook func(context.Context, *proto.FindFilesWithIdPrefixRequest, ...grpc.CallOption) (*proto.FindFilesWithIdPrefixResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// FindFilesWithIdPrefix method of the parent MockSoftcopyClient instance
// inovkes the hook at the front of the queue and discards it. After the
// queue is empty, the default hook function is invoked for any future
// action.
func (f *SoftcopyClientFindFilesWithIdPrefixFunc) PushHook(hook func(context.Context, *proto.FindFilesWithIdPrefixRequest, ...grpc.CallOption) (*proto.FindFilesWithIdPrefixResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientFindFilesWithIdPrefixFunc) SetDefaultReturn(r0 *proto.FindFilesWithIdPrefixResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.FindFilesWithIdPrefixRequest, ...grpc.CallOption) (*proto.FindFilesWithIdPrefixResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientFindFilesWithIdPrefixFunc) PushReturn(r0 *proto.FindFilesWithIdPrefixResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.FindFilesWithIdPrefixRequest, ...grpc.CallOption) (*proto.FindFilesWithIdPrefixResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientFindFilesWithIdPrefixFunc) nextHook() func(context.Context, *proto.FindFilesWithIdPrefixRequest, ...grpc.CallOption) (*proto.FindFilesWithIdPrefixResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientFindFilesWithIdPrefixFunc) appendCall(r0 SoftcopyClientFindFilesWithIdPrefixFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientFindFilesWithIdPrefixFuncCall
// objects describing the invocations of this function.
func (f *SoftcopyClientFindFilesWithIdPrefixFunc) History() []SoftcopyClientFindFilesWithIdPrefixFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientFindFilesWithIdPrefixFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientFindFilesWithIdPrefixFuncCall is an object that describes
// an invocation of method FindFilesWithIdPrefix on an instance of
// MockSoftcopyClient.
type SoftcopyClientFindFilesWithIdPrefixFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.FindFilesWithIdPrefixRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.FindFilesWithIdPrefixResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientFindFilesWithIdPrefixFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientFindFilesWithIdPrefixFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientFindFilesWithTagsFunc describes the behavior when the
// FindFilesWithTags method of the parent MockSoftcopyClient instance is
// invoked.
type SoftcopyClientFindFilesWithTagsFunc struct {
	defaultHook func(context.Context, *proto.FindFilesWithTagsRequest, ...grpc.CallOption) (*proto.FindFilesWithTagsResponse, error)
	hooks       []func(context.Context, *proto.FindFilesWithTagsRequest, ...grpc.CallOption) (*proto.FindFilesWithTagsResponse, error)
	history     []SoftcopyClientFindFilesWithTagsFuncCall
	mutex       sync.Mutex
}

// FindFilesWithTags delegates to the next hook function in the queue and
// stores the parameter and result values of this invocation.
func (m *MockSoftcopyClient) FindFilesWithTags(v0 context.Context, v1 *proto.FindFilesWithTagsRequest, v2 ...grpc.CallOption) (*proto.FindFilesWithTagsResponse, error) {
	r0, r1 := m.FindFilesWithTagsFunc.nextHook()(v0, v1, v2...)
	m.FindFilesWithTagsFunc.appendCall(SoftcopyClientFindFilesWithTagsFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the FindFilesWithTags
// method of the parent MockSoftcopyClient instance is invoked and the hook
// queue is empty.
func (f *SoftcopyClientFindFilesWithTagsFunc) SetDefaultHook(hook func(context.Context, *proto.FindFilesWithTagsRequest, ...grpc.CallOption) (*proto.FindFilesWithTagsResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// FindFilesWithTags method of the parent MockSoftcopyClient instance
// inovkes the hook at the front of the queue and discards it. After the
// queue is empty, the default hook function is invoked for any future
// action.
func (f *SoftcopyClientFindFilesWithTagsFunc) PushHook(hook func(context.Context, *proto.FindFilesWithTagsRequest, ...grpc.CallOption) (*proto.FindFilesWithTagsResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientFindFilesWithTagsFunc) SetDefaultReturn(r0 *proto.FindFilesWithTagsResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.FindFilesWithTagsRequest, ...grpc.CallOption) (*proto.FindFilesWithTagsResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientFindFilesWithTagsFunc) PushReturn(r0 *proto.FindFilesWithTagsResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.FindFilesWithTagsRequest, ...grpc.CallOption) (*proto.FindFilesWithTagsResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientFindFilesWithTagsFunc) nextHook() func(context.Context, *proto.FindFilesWithTagsRequest, ...grpc.CallOption) (*proto.FindFilesWithTagsResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientFindFilesWithTagsFunc) appendCall(r0 SoftcopyClientFindFilesWithTagsFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientFindFilesWithTagsFuncCall
// objects describing the invocations of this function.
func (f *SoftcopyClientFindFilesWithTagsFunc) History() []SoftcopyClientFindFilesWithTagsFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientFindFilesWithTagsFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientFindFilesWithTagsFuncCall is an object that describes an
// invocation of method FindFilesWithTags on an instance of
// MockSoftcopyClient.
type SoftcopyClientFindFilesWithTagsFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.FindFilesWithTagsRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.FindFilesWithTagsResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientFindFilesWithTagsFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientFindFilesWithTagsFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientFindTagByNameFunc describes the behavior when the
// FindTagByName method of the parent MockSoftcopyClient instance is
// invoked.
type SoftcopyClientFindTagByNameFunc struct {
	defaultHook func(context.Context, *proto.FindTagByNameRequest, ...grpc.CallOption) (*proto.FindTagByNameResponse, error)
	hooks       []func(context.Context, *proto.FindTagByNameRequest, ...grpc.CallOption) (*proto.FindTagByNameResponse, error)
	history     []SoftcopyClientFindTagByNameFuncCall
	mutex       sync.Mutex
}

// FindTagByName delegates to the next hook function in the queue and stores
// the parameter and result values of this invocation.
func (m *MockSoftcopyClient) FindTagByName(v0 context.Context, v1 *proto.FindTagByNameRequest, v2 ...grpc.CallOption) (*proto.FindTagByNameResponse, error) {
	r0, r1 := m.FindTagByNameFunc.nextHook()(v0, v1, v2...)
	m.FindTagByNameFunc.appendCall(SoftcopyClientFindTagByNameFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the FindTagByName method
// of the parent MockSoftcopyClient instance is invoked and the hook queue
// is empty.
func (f *SoftcopyClientFindTagByNameFunc) SetDefaultHook(hook func(context.Context, *proto.FindTagByNameRequest, ...grpc.CallOption) (*proto.FindTagByNameResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// FindTagByName method of the parent MockSoftcopyClient instance inovkes
// the hook at the front of the queue and discards it. After the queue is
// empty, the default hook function is invoked for any future action.
func (f *SoftcopyClientFindTagByNameFunc) PushHook(hook func(context.Context, *proto.FindTagByNameRequest, ...grpc.CallOption) (*proto.FindTagByNameResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientFindTagByNameFunc) SetDefaultReturn(r0 *proto.FindTagByNameResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.FindTagByNameRequest, ...grpc.CallOption) (*proto.FindTagByNameResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientFindTagByNameFunc) PushReturn(r0 *proto.FindTagByNameResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.FindTagByNameRequest, ...grpc.CallOption) (*proto.FindTagByNameResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientFindTagByNameFunc) nextHook() func(context.Context, *proto.FindTagByNameRequest, ...grpc.CallOption) (*proto.FindTagByNameResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientFindTagByNameFunc) appendCall(r0 SoftcopyClientFindTagByNameFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientFindTagByNameFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientFindTagByNameFunc) History() []SoftcopyClientFindTagByNameFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientFindTagByNameFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientFindTagByNameFuncCall is an object that describes an
// invocation of method FindTagByName on an instance of MockSoftcopyClient.
type SoftcopyClientFindTagByNameFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.FindTagByNameRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.FindTagByNameResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientFindTagByNameFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientFindTagByNameFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientFlushFileFunc describes the behavior when the FlushFile
// method of the parent MockSoftcopyClient instance is invoked.
type SoftcopyClientFlushFileFunc struct {
	defaultHook func(context.Context, *proto.FlushFileRequest, ...grpc.CallOption) (*proto.FlushFileResponse, error)
	hooks       []func(context.Context, *proto.FlushFileRequest, ...grpc.CallOption) (*proto.FlushFileResponse, error)
	history     []SoftcopyClientFlushFileFuncCall
	mutex       sync.Mutex
}

// FlushFile delegates to the next hook function in the queue and stores the
// parameter and result values of this invocation.
func (m *MockSoftcopyClient) FlushFile(v0 context.Context, v1 *proto.FlushFileRequest, v2 ...grpc.CallOption) (*proto.FlushFileResponse, error) {
	r0, r1 := m.FlushFileFunc.nextHook()(v0, v1, v2...)
	m.FlushFileFunc.appendCall(SoftcopyClientFlushFileFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the FlushFile method of
// the parent MockSoftcopyClient instance is invoked and the hook queue is
// empty.
func (f *SoftcopyClientFlushFileFunc) SetDefaultHook(hook func(context.Context, *proto.FlushFileRequest, ...grpc.CallOption) (*proto.FlushFileResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// FlushFile method of the parent MockSoftcopyClient instance inovkes the
// hook at the front of the queue and discards it. After the queue is empty,
// the default hook function is invoked for any future action.
func (f *SoftcopyClientFlushFileFunc) PushHook(hook func(context.Context, *proto.FlushFileRequest, ...grpc.CallOption) (*proto.FlushFileResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientFlushFileFunc) SetDefaultReturn(r0 *proto.FlushFileResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.FlushFileRequest, ...grpc.CallOption) (*proto.FlushFileResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientFlushFileFunc) PushReturn(r0 *proto.FlushFileResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.FlushFileRequest, ...grpc.CallOption) (*proto.FlushFileResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientFlushFileFunc) nextHook() func(context.Context, *proto.FlushFileRequest, ...grpc.CallOption) (*proto.FlushFileResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientFlushFileFunc) appendCall(r0 SoftcopyClientFlushFileFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientFlushFileFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientFlushFileFunc) History() []SoftcopyClientFlushFileFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientFlushFileFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientFlushFileFuncCall is an object that describes an invocation
// of method FlushFile on an instance of MockSoftcopyClient.
type SoftcopyClientFlushFileFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.FlushFileRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.FlushFileResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientFlushFileFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientFlushFileFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientGetAllTagsFunc describes the behavior when the GetAllTags
// method of the parent MockSoftcopyClient instance is invoked.
type SoftcopyClientGetAllTagsFunc struct {
	defaultHook func(context.Context, *proto.GetAllTagsRequest, ...grpc.CallOption) (*proto.GetAllTagsResponse, error)
	hooks       []func(context.Context, *proto.GetAllTagsRequest, ...grpc.CallOption) (*proto.GetAllTagsResponse, error)
	history     []SoftcopyClientGetAllTagsFuncCall
	mutex       sync.Mutex
}

// GetAllTags delegates to the next hook function in the queue and stores
// the parameter and result values of this invocation.
func (m *MockSoftcopyClient) GetAllTags(v0 context.Context, v1 *proto.GetAllTagsRequest, v2 ...grpc.CallOption) (*proto.GetAllTagsResponse, error) {
	r0, r1 := m.GetAllTagsFunc.nextHook()(v0, v1, v2...)
	m.GetAllTagsFunc.appendCall(SoftcopyClientGetAllTagsFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the GetAllTags method of
// the parent MockSoftcopyClient instance is invoked and the hook queue is
// empty.
func (f *SoftcopyClientGetAllTagsFunc) SetDefaultHook(hook func(context.Context, *proto.GetAllTagsRequest, ...grpc.CallOption) (*proto.GetAllTagsResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// GetAllTags method of the parent MockSoftcopyClient instance inovkes the
// hook at the front of the queue and discards it. After the queue is empty,
// the default hook function is invoked for any future action.
func (f *SoftcopyClientGetAllTagsFunc) PushHook(hook func(context.Context, *proto.GetAllTagsRequest, ...grpc.CallOption) (*proto.GetAllTagsResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientGetAllTagsFunc) SetDefaultReturn(r0 *proto.GetAllTagsResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.GetAllTagsRequest, ...grpc.CallOption) (*proto.GetAllTagsResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientGetAllTagsFunc) PushReturn(r0 *proto.GetAllTagsResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.GetAllTagsRequest, ...grpc.CallOption) (*proto.GetAllTagsResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientGetAllTagsFunc) nextHook() func(context.Context, *proto.GetAllTagsRequest, ...grpc.CallOption) (*proto.GetAllTagsResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientGetAllTagsFunc) appendCall(r0 SoftcopyClientGetAllTagsFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientGetAllTagsFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientGetAllTagsFunc) History() []SoftcopyClientGetAllTagsFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientGetAllTagsFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientGetAllTagsFuncCall is an object that describes an
// invocation of method GetAllTags on an instance of MockSoftcopyClient.
type SoftcopyClientGetAllTagsFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.GetAllTagsRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.GetAllTagsResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientGetAllTagsFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientGetAllTagsFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientGetFileFunc describes the behavior when the GetFile method
// of the parent MockSoftcopyClient instance is invoked.
type SoftcopyClientGetFileFunc struct {
	defaultHook func(context.Context, *proto.GetFileRequest, ...grpc.CallOption) (*proto.GetFileResponse, error)
	hooks       []func(context.Context, *proto.GetFileRequest, ...grpc.CallOption) (*proto.GetFileResponse, error)
	history     []SoftcopyClientGetFileFuncCall
	mutex       sync.Mutex
}

// GetFile delegates to the next hook function in the queue and stores the
// parameter and result values of this invocation.
func (m *MockSoftcopyClient) GetFile(v0 context.Context, v1 *proto.GetFileRequest, v2 ...grpc.CallOption) (*proto.GetFileResponse, error) {
	r0, r1 := m.GetFileFunc.nextHook()(v0, v1, v2...)
	m.GetFileFunc.appendCall(SoftcopyClientGetFileFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the GetFile method of
// the parent MockSoftcopyClient instance is invoked and the hook queue is
// empty.
func (f *SoftcopyClientGetFileFunc) SetDefaultHook(hook func(context.Context, *proto.GetFileRequest, ...grpc.CallOption) (*proto.GetFileResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// GetFile method of the parent MockSoftcopyClient instance inovkes the hook
// at the front of the queue and discards it. After the queue is empty, the
// default hook function is invoked for any future action.
func (f *SoftcopyClientGetFileFunc) PushHook(hook func(context.Context, *proto.GetFileRequest, ...grpc.CallOption) (*proto.GetFileResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientGetFileFunc) SetDefaultReturn(r0 *proto.GetFileResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.GetFileRequest, ...grpc.CallOption) (*proto.GetFileResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientGetFileFunc) PushReturn(r0 *proto.GetFileResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.GetFileRequest, ...grpc.CallOption) (*proto.GetFileResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientGetFileFunc) nextHook() func(context.Context, *proto.GetFileRequest, ...grpc.CallOption) (*proto.GetFileResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientGetFileFunc) appendCall(r0 SoftcopyClientGetFileFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientGetFileFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientGetFileFunc) History() []SoftcopyClientGetFileFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientGetFileFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientGetFileFuncCall is an object that describes an invocation
// of method GetFile on an instance of MockSoftcopyClient.
type SoftcopyClientGetFileFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.GetFileRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.GetFileResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientGetFileFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientGetFileFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientGetFileDaysFunc describes the behavior when the GetFileDays
// method of the parent MockSoftcopyClient instance is invoked.
type SoftcopyClientGetFileDaysFunc struct {
	defaultHook func(context.Context, *proto.GetFileDaysRequest, ...grpc.CallOption) (*proto.GetFileDaysResponse, error)
	hooks       []func(context.Context, *proto.GetFileDaysRequest, ...grpc.CallOption) (*proto.GetFileDaysResponse, error)
	history     []SoftcopyClientGetFileDaysFuncCall
	mutex       sync.Mutex
}

// GetFileDays delegates to the next hook function in the queue and stores
// the parameter and result values of this invocation.
func (m *MockSoftcopyClient) GetFileDays(v0 context.Context, v1 *proto.GetFileDaysRequest, v2 ...grpc.CallOption) (*proto.GetFileDaysResponse, error) {
	r0, r1 := m.GetFileDaysFunc.nextHook()(v0, v1, v2...)
	m.GetFileDaysFunc.appendCall(SoftcopyClientGetFileDaysFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the GetFileDays method
// of the parent MockSoftcopyClient instance is invoked and the hook queue
// is empty.
func (f *SoftcopyClientGetFileDaysFunc) SetDefaultHook(hook func(context.Context, *proto.GetFileDaysRequest, ...grpc.CallOption) (*proto.GetFileDaysResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// GetFileDays method of the parent MockSoftcopyClient instance inovkes the
// hook at the front of the queue and discards it. After the queue is empty,
// the default hook function is invoked for any future action.
func (f *SoftcopyClientGetFileDaysFunc) PushHook(hook func(context.Context, *proto.GetFileDaysRequest, ...grpc.CallOption) (*proto.GetFileDaysResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientGetFileDaysFunc) SetDefaultReturn(r0 *proto.GetFileDaysResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.GetFileDaysRequest, ...grpc.CallOption) (*proto.GetFileDaysResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientGetFileDaysFunc) PushReturn(r0 *proto.GetFileDaysResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.GetFileDaysRequest, ...grpc.CallOption) (*proto.GetFileDaysResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientGetFileDaysFunc) nextHook() func(context.Context, *proto.GetFileDaysRequest, ...grpc.CallOption) (*proto.GetFileDaysResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientGetFileDaysFunc) appendCall(r0 SoftcopyClientGetFileDaysFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientGetFileDaysFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientGetFileDaysFunc) History() []SoftcopyClientGetFileDaysFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientGetFileDaysFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientGetFileDaysFuncCall is an object that describes an
// invocation of method GetFileDays on an instance of MockSoftcopyClient.
type SoftcopyClientGetFileDaysFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.GetFileDaysRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.GetFileDaysResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientGetFileDaysFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientGetFileDaysFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientGetFileMonthsFunc describes the behavior when the
// GetFileMonths method of the parent MockSoftcopyClient instance is
// invoked.
type SoftcopyClientGetFileMonthsFunc struct {
	defaultHook func(context.Context, *proto.GetFileMonthsRequest, ...grpc.CallOption) (*proto.GetFileMonthsResponse, error)
	hooks       []func(context.Context, *proto.GetFileMonthsRequest, ...grpc.CallOption) (*proto.GetFileMonthsResponse, error)
	history     []SoftcopyClientGetFileMonthsFuncCall
	mutex       sync.Mutex
}

// GetFileMonths delegates to the next hook function in the queue and stores
// the parameter and result values of this invocation.
func (m *MockSoftcopyClient) GetFileMonths(v0 context.Context, v1 *proto.GetFileMonthsRequest, v2 ...grpc.CallOption) (*proto.GetFileMonthsResponse, error) {
	r0, r1 := m.GetFileMonthsFunc.nextHook()(v0, v1, v2...)
	m.GetFileMonthsFunc.appendCall(SoftcopyClientGetFileMonthsFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the GetFileMonths method
// of the parent MockSoftcopyClient instance is invoked and the hook queue
// is empty.
func (f *SoftcopyClientGetFileMonthsFunc) SetDefaultHook(hook func(context.Context, *proto.GetFileMonthsRequest, ...grpc.CallOption) (*proto.GetFileMonthsResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// GetFileMonths method of the parent MockSoftcopyClient instance inovkes
// the hook at the front of the queue and discards it. After the queue is
// empty, the default hook function is invoked for any future action.
func (f *SoftcopyClientGetFileMonthsFunc) PushHook(hook func(context.Context, *proto.GetFileMonthsRequest, ...grpc.CallOption) (*proto.GetFileMonthsResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientGetFileMonthsFunc) SetDefaultReturn(r0 *proto.GetFileMonthsResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.GetFileMonthsRequest, ...grpc.CallOption) (*proto.GetFileMonthsResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientGetFileMonthsFunc) PushReturn(r0 *proto.GetFileMonthsResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.GetFileMonthsRequest, ...grpc.CallOption) (*proto.GetFileMonthsResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientGetFileMonthsFunc) nextHook() func(context.Context, *proto.GetFileMonthsRequest, ...grpc.CallOption) (*proto.GetFileMonthsResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientGetFileMonthsFunc) appendCall(r0 SoftcopyClientGetFileMonthsFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientGetFileMonthsFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientGetFileMonthsFunc) History() []SoftcopyClientGetFileMonthsFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientGetFileMonthsFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientGetFileMonthsFuncCall is an object that describes an
// invocation of method GetFileMonths on an instance of MockSoftcopyClient.
type SoftcopyClientGetFileMonthsFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.GetFileMonthsRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.GetFileMonthsResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientGetFileMonthsFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientGetFileMonthsFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientGetFileWithDateFunc describes the behavior when the
// GetFileWithDate method of the parent MockSoftcopyClient instance is
// invoked.
type SoftcopyClientGetFileWithDateFunc struct {
	defaultHook func(context.Context, *proto.GetFileWithDateRequest, ...grpc.CallOption) (*proto.GetFileWithDateResponse, error)
	hooks       []func(context.Context, *proto.GetFileWithDateRequest, ...grpc.CallOption) (*proto.GetFileWithDateResponse, error)
	history     []SoftcopyClientGetFileWithDateFuncCall
	mutex       sync.Mutex
}

// GetFileWithDate delegates to the next hook function in the queue and
// stores the parameter and result values of this invocation.
func (m *MockSoftcopyClient) GetFileWithDate(v0 context.Context, v1 *proto.GetFileWithDateRequest, v2 ...grpc.CallOption) (*proto.GetFileWithDateResponse, error) {
	r0, r1 := m.GetFileWithDateFunc.nextHook()(v0, v1, v2...)
	m.GetFileWithDateFunc.appendCall(SoftcopyClientGetFileWithDateFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the GetFileWithDate
// method of the parent MockSoftcopyClient instance is invoked and the hook
// queue is empty.
func (f *SoftcopyClientGetFileWithDateFunc) SetDefaultHook(hook func(context.Context, *proto.GetFileWithDateRequest, ...grpc.CallOption) (*proto.GetFileWithDateResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// GetFileWithDate method of the parent MockSoftcopyClient instance inovkes
// the hook at the front of the queue and discards it. After the queue is
// empty, the default hook function is invoked for any future action.
func (f *SoftcopyClientGetFileWithDateFunc) PushHook(hook func(context.Context, *proto.GetFileWithDateRequest, ...grpc.CallOption) (*proto.GetFileWithDateResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientGetFileWithDateFunc) SetDefaultReturn(r0 *proto.GetFileWithDateResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.GetFileWithDateRequest, ...grpc.CallOption) (*proto.GetFileWithDateResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientGetFileWithDateFunc) PushReturn(r0 *proto.GetFileWithDateResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.GetFileWithDateRequest, ...grpc.CallOption) (*proto.GetFileWithDateResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientGetFileWithDateFunc) nextHook() func(context.Context, *proto.GetFileWithDateRequest, ...grpc.CallOption) (*proto.GetFileWithDateResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientGetFileWithDateFunc) appendCall(r0 SoftcopyClientGetFileWithDateFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientGetFileWithDateFuncCall
// objects describing the invocations of this function.
func (f *SoftcopyClientGetFileWithDateFunc) History() []SoftcopyClientGetFileWithDateFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientGetFileWithDateFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientGetFileWithDateFuncCall is an object that describes an
// invocation of method GetFileWithDate on an instance of
// MockSoftcopyClient.
type SoftcopyClientGetFileWithDateFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.GetFileWithDateRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.GetFileWithDateResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientGetFileWithDateFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientGetFileWithDateFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientGetFileYearsFunc describes the behavior when the
// GetFileYears method of the parent MockSoftcopyClient instance is invoked.
type SoftcopyClientGetFileYearsFunc struct {
	defaultHook func(context.Context, *proto.GetFileYearsRequest, ...grpc.CallOption) (*proto.GetFileYearsResponse, error)
	hooks       []func(context.Context, *proto.GetFileYearsRequest, ...grpc.CallOption) (*proto.GetFileYearsResponse, error)
	history     []SoftcopyClientGetFileYearsFuncCall
	mutex       sync.Mutex
}

// GetFileYears delegates to the next hook function in the queue and stores
// the parameter and result values of this invocation.
func (m *MockSoftcopyClient) GetFileYears(v0 context.Context, v1 *proto.GetFileYearsRequest, v2 ...grpc.CallOption) (*proto.GetFileYearsResponse, error) {
	r0, r1 := m.GetFileYearsFunc.nextHook()(v0, v1, v2...)
	m.GetFileYearsFunc.appendCall(SoftcopyClientGetFileYearsFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the GetFileYears method
// of the parent MockSoftcopyClient instance is invoked and the hook queue
// is empty.
func (f *SoftcopyClientGetFileYearsFunc) SetDefaultHook(hook func(context.Context, *proto.GetFileYearsRequest, ...grpc.CallOption) (*proto.GetFileYearsResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// GetFileYears method of the parent MockSoftcopyClient instance inovkes the
// hook at the front of the queue and discards it. After the queue is empty,
// the default hook function is invoked for any future action.
func (f *SoftcopyClientGetFileYearsFunc) PushHook(hook func(context.Context, *proto.GetFileYearsRequest, ...grpc.CallOption) (*proto.GetFileYearsResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientGetFileYearsFunc) SetDefaultReturn(r0 *proto.GetFileYearsResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.GetFileYearsRequest, ...grpc.CallOption) (*proto.GetFileYearsResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientGetFileYearsFunc) PushReturn(r0 *proto.GetFileYearsResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.GetFileYearsRequest, ...grpc.CallOption) (*proto.GetFileYearsResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientGetFileYearsFunc) nextHook() func(context.Context, *proto.GetFileYearsRequest, ...grpc.CallOption) (*proto.GetFileYearsResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientGetFileYearsFunc) appendCall(r0 SoftcopyClientGetFileYearsFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientGetFileYearsFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientGetFileYearsFunc) History() []SoftcopyClientGetFileYearsFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientGetFileYearsFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientGetFileYearsFuncCall is an object that describes an
// invocation of method GetFileYears on an instance of MockSoftcopyClient.
type SoftcopyClientGetFileYearsFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.GetFileYearsRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.GetFileYearsResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientGetFileYearsFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientGetFileYearsFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientGetTagsForFileFunc describes the behavior when the
// GetTagsForFile method of the parent MockSoftcopyClient instance is
// invoked.
type SoftcopyClientGetTagsForFileFunc struct {
	defaultHook func(context.Context, *proto.GetTagsForFileRequest, ...grpc.CallOption) (*proto.GetTagsForFileResponse, error)
	hooks       []func(context.Context, *proto.GetTagsForFileRequest, ...grpc.CallOption) (*proto.GetTagsForFileResponse, error)
	history     []SoftcopyClientGetTagsForFileFuncCall
	mutex       sync.Mutex
}

// GetTagsForFile delegates to the next hook function in the queue and
// stores the parameter and result values of this invocation.
func (m *MockSoftcopyClient) GetTagsForFile(v0 context.Context, v1 *proto.GetTagsForFileRequest, v2 ...grpc.CallOption) (*proto.GetTagsForFileResponse, error) {
	r0, r1 := m.GetTagsForFileFunc.nextHook()(v0, v1, v2...)
	m.GetTagsForFileFunc.appendCall(SoftcopyClientGetTagsForFileFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the GetTagsForFile
// method of the parent MockSoftcopyClient instance is invoked and the hook
// queue is empty.
func (f *SoftcopyClientGetTagsForFileFunc) SetDefaultHook(hook func(context.Context, *proto.GetTagsForFileRequest, ...grpc.CallOption) (*proto.GetTagsForFileResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// GetTagsForFile method of the parent MockSoftcopyClient instance inovkes
// the hook at the front of the queue and discards it. After the queue is
// empty, the default hook function is invoked for any future action.
func (f *SoftcopyClientGetTagsForFileFunc) PushHook(hook func(context.Context, *proto.GetTagsForFileRequest, ...grpc.CallOption) (*proto.GetTagsForFileResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientGetTagsForFileFunc) SetDefaultReturn(r0 *proto.GetTagsForFileResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.GetTagsForFileRequest, ...grpc.CallOption) (*proto.GetTagsForFileResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientGetTagsForFileFunc) PushReturn(r0 *proto.GetTagsForFileResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.GetTagsForFileRequest, ...grpc.CallOption) (*proto.GetTagsForFileResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientGetTagsForFileFunc) nextHook() func(context.Context, *proto.GetTagsForFileRequest, ...grpc.CallOption) (*proto.GetTagsForFileResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientGetTagsForFileFunc) appendCall(r0 SoftcopyClientGetTagsForFileFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientGetTagsForFileFuncCall
// objects describing the invocations of this function.
func (f *SoftcopyClientGetTagsForFileFunc) History() []SoftcopyClientGetTagsForFileFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientGetTagsForFileFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientGetTagsForFileFuncCall is an object that describes an
// invocation of method GetTagsForFile on an instance of MockSoftcopyClient.
type SoftcopyClientGetTagsForFileFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.GetTagsForFileRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.GetTagsForFileResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientGetTagsForFileFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientGetTagsForFileFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientOpenFileFunc describes the behavior when the OpenFile
// method of the parent MockSoftcopyClient instance is invoked.
type SoftcopyClientOpenFileFunc struct {
	defaultHook func(context.Context, *proto.OpenFileRequest, ...grpc.CallOption) (*proto.OpenFileResponse, error)
	hooks       []func(context.Context, *proto.OpenFileRequest, ...grpc.CallOption) (*proto.OpenFileResponse, error)
	history     []SoftcopyClientOpenFileFuncCall
	mutex       sync.Mutex
}

// OpenFile delegates to the next hook function in the queue and stores the
// parameter and result values of this invocation.
func (m *MockSoftcopyClient) OpenFile(v0 context.Context, v1 *proto.OpenFileRequest, v2 ...grpc.CallOption) (*proto.OpenFileResponse, error) {
	r0, r1 := m.OpenFileFunc.nextHook()(v0, v1, v2...)
	m.OpenFileFunc.appendCall(SoftcopyClientOpenFileFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the OpenFile method of
// the parent MockSoftcopyClient instance is invoked and the hook queue is
// empty.
func (f *SoftcopyClientOpenFileFunc) SetDefaultHook(hook func(context.Context, *proto.OpenFileRequest, ...grpc.CallOption) (*proto.OpenFileResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// OpenFile method of the parent MockSoftcopyClient instance inovkes the
// hook at the front of the queue and discards it. After the queue is empty,
// the default hook function is invoked for any future action.
func (f *SoftcopyClientOpenFileFunc) PushHook(hook func(context.Context, *proto.OpenFileRequest, ...grpc.CallOption) (*proto.OpenFileResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientOpenFileFunc) SetDefaultReturn(r0 *proto.OpenFileResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.OpenFileRequest, ...grpc.CallOption) (*proto.OpenFileResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientOpenFileFunc) PushReturn(r0 *proto.OpenFileResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.OpenFileRequest, ...grpc.CallOption) (*proto.OpenFileResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientOpenFileFunc) nextHook() func(context.Context, *proto.OpenFileRequest, ...grpc.CallOption) (*proto.OpenFileResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientOpenFileFunc) appendCall(r0 SoftcopyClientOpenFileFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientOpenFileFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientOpenFileFunc) History() []SoftcopyClientOpenFileFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientOpenFileFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientOpenFileFuncCall is an object that describes an invocation
// of method OpenFile on an instance of MockSoftcopyClient.
type SoftcopyClientOpenFileFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.OpenFileRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.OpenFileResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientOpenFileFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientOpenFileFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientReadFileFunc describes the behavior when the ReadFile
// method of the parent MockSoftcopyClient instance is invoked.
type SoftcopyClientReadFileFunc struct {
	defaultHook func(context.Context, *proto.ReadFileRequest, ...grpc.CallOption) (*proto.ReadFileResponse, error)
	hooks       []func(context.Context, *proto.ReadFileRequest, ...grpc.CallOption) (*proto.ReadFileResponse, error)
	history     []SoftcopyClientReadFileFuncCall
	mutex       sync.Mutex
}

// ReadFile delegates to the next hook function in the queue and stores the
// parameter and result values of this invocation.
func (m *MockSoftcopyClient) ReadFile(v0 context.Context, v1 *proto.ReadFileRequest, v2 ...grpc.CallOption) (*proto.ReadFileResponse, error) {
	r0, r1 := m.ReadFileFunc.nextHook()(v0, v1, v2...)
	m.ReadFileFunc.appendCall(SoftcopyClientReadFileFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the ReadFile method of
// the parent MockSoftcopyClient instance is invoked and the hook queue is
// empty.
func (f *SoftcopyClientReadFileFunc) SetDefaultHook(hook func(context.Context, *proto.ReadFileRequest, ...grpc.CallOption) (*proto.ReadFileResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// ReadFile method of the parent MockSoftcopyClient instance inovkes the
// hook at the front of the queue and discards it. After the queue is empty,
// the default hook function is invoked for any future action.
func (f *SoftcopyClientReadFileFunc) PushHook(hook func(context.Context, *proto.ReadFileRequest, ...grpc.CallOption) (*proto.ReadFileResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientReadFileFunc) SetDefaultReturn(r0 *proto.ReadFileResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.ReadFileRequest, ...grpc.CallOption) (*proto.ReadFileResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientReadFileFunc) PushReturn(r0 *proto.ReadFileResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.ReadFileRequest, ...grpc.CallOption) (*proto.ReadFileResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientReadFileFunc) nextHook() func(context.Context, *proto.ReadFileRequest, ...grpc.CallOption) (*proto.ReadFileResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientReadFileFunc) appendCall(r0 SoftcopyClientReadFileFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientReadFileFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientReadFileFunc) History() []SoftcopyClientReadFileFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientReadFileFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientReadFileFuncCall is an object that describes an invocation
// of method ReadFile on an instance of MockSoftcopyClient.
type SoftcopyClientReadFileFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.ReadFileRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.ReadFileResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientReadFileFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientReadFileFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientRemoveFileFunc describes the behavior when the RemoveFile
// method of the parent MockSoftcopyClient instance is invoked.
type SoftcopyClientRemoveFileFunc struct {
	defaultHook func(context.Context, *proto.RemoveFileRequest, ...grpc.CallOption) (*proto.RemoveFileResponse, error)
	hooks       []func(context.Context, *proto.RemoveFileRequest, ...grpc.CallOption) (*proto.RemoveFileResponse, error)
	history     []SoftcopyClientRemoveFileFuncCall
	mutex       sync.Mutex
}

// RemoveFile delegates to the next hook function in the queue and stores
// the parameter and result values of this invocation.
func (m *MockSoftcopyClient) RemoveFile(v0 context.Context, v1 *proto.RemoveFileRequest, v2 ...grpc.CallOption) (*proto.RemoveFileResponse, error) {
	r0, r1 := m.RemoveFileFunc.nextHook()(v0, v1, v2...)
	m.RemoveFileFunc.appendCall(SoftcopyClientRemoveFileFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the RemoveFile method of
// the parent MockSoftcopyClient instance is invoked and the hook queue is
// empty.
func (f *SoftcopyClientRemoveFileFunc) SetDefaultHook(hook func(context.Context, *proto.RemoveFileRequest, ...grpc.CallOption) (*proto.RemoveFileResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// RemoveFile method of the parent MockSoftcopyClient instance inovkes the
// hook at the front of the queue and discards it. After the queue is empty,
// the default hook function is invoked for any future action.
func (f *SoftcopyClientRemoveFileFunc) PushHook(hook func(context.Context, *proto.RemoveFileRequest, ...grpc.CallOption) (*proto.RemoveFileResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientRemoveFileFunc) SetDefaultReturn(r0 *proto.RemoveFileResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.RemoveFileRequest, ...grpc.CallOption) (*proto.RemoveFileResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientRemoveFileFunc) PushReturn(r0 *proto.RemoveFileResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.RemoveFileRequest, ...grpc.CallOption) (*proto.RemoveFileResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientRemoveFileFunc) nextHook() func(context.Context, *proto.RemoveFileRequest, ...grpc.CallOption) (*proto.RemoveFileResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientRemoveFileFunc) appendCall(r0 SoftcopyClientRemoveFileFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientRemoveFileFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientRemoveFileFunc) History() []SoftcopyClientRemoveFileFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientRemoveFileFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientRemoveFileFuncCall is an object that describes an
// invocation of method RemoveFile on an instance of MockSoftcopyClient.
type SoftcopyClientRemoveFileFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.RemoveFileRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.RemoveFileResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientRemoveFileFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientRemoveFileFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientUpdateFileDateFunc describes the behavior when the
// UpdateFileDate method of the parent MockSoftcopyClient instance is
// invoked.
type SoftcopyClientUpdateFileDateFunc struct {
	defaultHook func(context.Context, *proto.UpdateFileDateRequest, ...grpc.CallOption) (*proto.UpdateFileDateResponse, error)
	hooks       []func(context.Context, *proto.UpdateFileDateRequest, ...grpc.CallOption) (*proto.UpdateFileDateResponse, error)
	history     []SoftcopyClientUpdateFileDateFuncCall
	mutex       sync.Mutex
}

// UpdateFileDate delegates to the next hook function in the queue and
// stores the parameter and result values of this invocation.
func (m *MockSoftcopyClient) UpdateFileDate(v0 context.Context, v1 *proto.UpdateFileDateRequest, v2 ...grpc.CallOption) (*proto.UpdateFileDateResponse, error) {
	r0, r1 := m.UpdateFileDateFunc.nextHook()(v0, v1, v2...)
	m.UpdateFileDateFunc.appendCall(SoftcopyClientUpdateFileDateFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the UpdateFileDate
// method of the parent MockSoftcopyClient instance is invoked and the hook
// queue is empty.
func (f *SoftcopyClientUpdateFileDateFunc) SetDefaultHook(hook func(context.Context, *proto.UpdateFileDateRequest, ...grpc.CallOption) (*proto.UpdateFileDateResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// UpdateFileDate method of the parent MockSoftcopyClient instance inovkes
// the hook at the front of the queue and discards it. After the queue is
// empty, the default hook function is invoked for any future action.
func (f *SoftcopyClientUpdateFileDateFunc) PushHook(hook func(context.Context, *proto.UpdateFileDateRequest, ...grpc.CallOption) (*proto.UpdateFileDateResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientUpdateFileDateFunc) SetDefaultReturn(r0 *proto.UpdateFileDateResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.UpdateFileDateRequest, ...grpc.CallOption) (*proto.UpdateFileDateResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientUpdateFileDateFunc) PushReturn(r0 *proto.UpdateFileDateResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.UpdateFileDateRequest, ...grpc.CallOption) (*proto.UpdateFileDateResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientUpdateFileDateFunc) nextHook() func(context.Context, *proto.UpdateFileDateRequest, ...grpc.CallOption) (*proto.UpdateFileDateResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientUpdateFileDateFunc) appendCall(r0 SoftcopyClientUpdateFileDateFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientUpdateFileDateFuncCall
// objects describing the invocations of this function.
func (f *SoftcopyClientUpdateFileDateFunc) History() []SoftcopyClientUpdateFileDateFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientUpdateFileDateFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientUpdateFileDateFuncCall is an object that describes an
// invocation of method UpdateFileDate on an instance of MockSoftcopyClient.
type SoftcopyClientUpdateFileDateFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.UpdateFileDateRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.UpdateFileDateResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientUpdateFileDateFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientUpdateFileDateFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientUpdateFileTagsFunc describes the behavior when the
// UpdateFileTags method of the parent MockSoftcopyClient instance is
// invoked.
type SoftcopyClientUpdateFileTagsFunc struct {
	defaultHook func(context.Context, *proto.UpdateFileTagsRequest, ...grpc.CallOption) (*proto.UpdateFileTagsResponse, error)
	hooks       []func(context.Context, *proto.UpdateFileTagsRequest, ...grpc.CallOption) (*proto.UpdateFileTagsResponse, error)
	history     []SoftcopyClientUpdateFileTagsFuncCall
	mutex       sync.Mutex
}

// UpdateFileTags delegates to the next hook function in the queue and
// stores the parameter and result values of this invocation.
func (m *MockSoftcopyClient) UpdateFileTags(v0 context.Context, v1 *proto.UpdateFileTagsRequest, v2 ...grpc.CallOption) (*proto.UpdateFileTagsResponse, error) {
	r0, r1 := m.UpdateFileTagsFunc.nextHook()(v0, v1, v2...)
	m.UpdateFileTagsFunc.appendCall(SoftcopyClientUpdateFileTagsFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the UpdateFileTags
// method of the parent MockSoftcopyClient instance is invoked and the hook
// queue is empty.
func (f *SoftcopyClientUpdateFileTagsFunc) SetDefaultHook(hook func(context.Context, *proto.UpdateFileTagsRequest, ...grpc.CallOption) (*proto.UpdateFileTagsResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// UpdateFileTags method of the parent MockSoftcopyClient instance inovkes
// the hook at the front of the queue and discards it. After the queue is
// empty, the default hook function is invoked for any future action.
func (f *SoftcopyClientUpdateFileTagsFunc) PushHook(hook func(context.Context, *proto.UpdateFileTagsRequest, ...grpc.CallOption) (*proto.UpdateFileTagsResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientUpdateFileTagsFunc) SetDefaultReturn(r0 *proto.UpdateFileTagsResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.UpdateFileTagsRequest, ...grpc.CallOption) (*proto.UpdateFileTagsResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientUpdateFileTagsFunc) PushReturn(r0 *proto.UpdateFileTagsResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.UpdateFileTagsRequest, ...grpc.CallOption) (*proto.UpdateFileTagsResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientUpdateFileTagsFunc) nextHook() func(context.Context, *proto.UpdateFileTagsRequest, ...grpc.CallOption) (*proto.UpdateFileTagsResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientUpdateFileTagsFunc) appendCall(r0 SoftcopyClientUpdateFileTagsFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientUpdateFileTagsFuncCall
// objects describing the invocations of this function.
func (f *SoftcopyClientUpdateFileTagsFunc) History() []SoftcopyClientUpdateFileTagsFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientUpdateFileTagsFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientUpdateFileTagsFuncCall is an object that describes an
// invocation of method UpdateFileTags on an instance of MockSoftcopyClient.
type SoftcopyClientUpdateFileTagsFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.UpdateFileTagsRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.UpdateFileTagsResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientUpdateFileTagsFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientUpdateFileTagsFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}

// SoftcopyClientWriteFileFunc describes the behavior when the WriteFile
// method of the parent MockSoftcopyClient instance is invoked.
type SoftcopyClientWriteFileFunc struct {
	defaultHook func(context.Context, *proto.WriteFileRequest, ...grpc.CallOption) (*proto.WriteFileResponse, error)
	hooks       []func(context.Context, *proto.WriteFileRequest, ...grpc.CallOption) (*proto.WriteFileResponse, error)
	history     []SoftcopyClientWriteFileFuncCall
	mutex       sync.Mutex
}

// WriteFile delegates to the next hook function in the queue and stores the
// parameter and result values of this invocation.
func (m *MockSoftcopyClient) WriteFile(v0 context.Context, v1 *proto.WriteFileRequest, v2 ...grpc.CallOption) (*proto.WriteFileResponse, error) {
	r0, r1 := m.WriteFileFunc.nextHook()(v0, v1, v2...)
	m.WriteFileFunc.appendCall(SoftcopyClientWriteFileFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the WriteFile method of
// the parent MockSoftcopyClient instance is invoked and the hook queue is
// empty.
func (f *SoftcopyClientWriteFileFunc) SetDefaultHook(hook func(context.Context, *proto.WriteFileRequest, ...grpc.CallOption) (*proto.WriteFileResponse, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// WriteFile method of the parent MockSoftcopyClient instance inovkes the
// hook at the front of the queue and discards it. After the queue is empty,
// the default hook function is invoked for any future action.
func (f *SoftcopyClientWriteFileFunc) PushHook(hook func(context.Context, *proto.WriteFileRequest, ...grpc.CallOption) (*proto.WriteFileResponse, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *SoftcopyClientWriteFileFunc) SetDefaultReturn(r0 *proto.WriteFileResponse, r1 error) {
	f.SetDefaultHook(func(context.Context, *proto.WriteFileRequest, ...grpc.CallOption) (*proto.WriteFileResponse, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *SoftcopyClientWriteFileFunc) PushReturn(r0 *proto.WriteFileResponse, r1 error) {
	f.PushHook(func(context.Context, *proto.WriteFileRequest, ...grpc.CallOption) (*proto.WriteFileResponse, error) {
		return r0, r1
	})
}

func (f *SoftcopyClientWriteFileFunc) nextHook() func(context.Context, *proto.WriteFileRequest, ...grpc.CallOption) (*proto.WriteFileResponse, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SoftcopyClientWriteFileFunc) appendCall(r0 SoftcopyClientWriteFileFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SoftcopyClientWriteFileFuncCall objects
// describing the invocations of this function.
func (f *SoftcopyClientWriteFileFunc) History() []SoftcopyClientWriteFileFuncCall {
	f.mutex.Lock()
	history := make([]SoftcopyClientWriteFileFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SoftcopyClientWriteFileFuncCall is an object that describes an invocation
// of method WriteFile on an instance of MockSoftcopyClient.
type SoftcopyClientWriteFileFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 *proto.WriteFileRequest
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []grpc.CallOption
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 *proto.WriteFileResponse
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SoftcopyClientWriteFileFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SoftcopyClientWriteFileFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}
